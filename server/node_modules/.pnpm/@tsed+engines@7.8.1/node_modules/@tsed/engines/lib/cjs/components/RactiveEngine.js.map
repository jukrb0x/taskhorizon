{"version":3,"file":"RactiveEngine.js","sourceRoot":"","sources":["../../../src/components/RactiveEngine.ts"],"names":[],"mappings":";;;;AAAA,yDAAoD;AACpD,qCAA+C;AAG/C,IAAa,aAAa,GAA1B,MAAa,aAAc,SAAQ,eAAM;IAC7B,QAAQ,CAAC,QAAgB,EAAE,OAAsB;QACzD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC5C,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,OAAO,CAAC,OAAsB,EAAE,EAAE;YAChC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC;YAC3B,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;QAClD,CAAC,CAAC;IACJ,CAAC;IAES,KAAK,CAAC,OAAY;QAC1B,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;YACvD,mCAAmC;YACnC,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAE1C,wDAAwD;YACxD,IAAI,CAAC,CAAC;YACN,IAAI,MAAM,CAAC;YACX,IAAI,UAAU,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;YAE/D,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvD,MAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC/B;SACF;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;CACF,CAAA;AA7BY,aAAa;IADzB,IAAA,uBAAU,EAAC,SAAS,CAAC;GACT,aAAa,CA6BzB;AA7BY,sCAAa","sourcesContent":["import {ViewEngine} from \"../decorators/viewEngine\";\nimport {Engine, EngineOptions} from \"./Engine\";\n\n@ViewEngine(\"ractive\")\nexport class RactiveEngine extends Engine {\n  protected $compile(template: string, options: EngineOptions) {\n    const Engine = this.engine;\n    const compile = this.engine.parse(template);\n    Engine.DEBUG = false;\n    return (options: EngineOptions) => {\n      options.template = compile;\n      return new Engine(this.clean(options)).toHTML();\n    };\n  }\n\n  protected clean(options: any) {\n    if (options.data === null || options.data === undefined) {\n      // Shallow clone the options object\n      options.data = Object.assign({}, options);\n\n      // Remove consolidate-specific properties from the clone\n      let i;\n      let length;\n      let properties = [\"template\", \"filename\", \"cache\", \"partials\"];\n\n      for (i = 0, length = properties.length; i < length; i++) {\n        const property = properties[i];\n        delete options.data[property];\n      }\n    }\n\n    return options;\n  }\n}\n"]}