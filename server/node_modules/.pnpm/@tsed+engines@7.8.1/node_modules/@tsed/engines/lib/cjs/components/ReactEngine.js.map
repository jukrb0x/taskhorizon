{"version":3,"file":"ReactEngine.js","sourceRoot":"","sources":["../../../src/components/ReactEngine.ts"],"names":[],"mappings":"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","sourcesContent":["import {resolve} from \"path\";\nimport {readFileSync} from \"fs\";\nimport {ViewEngine} from \"../decorators/viewEngine\";\nimport {Engine, EngineOptions, ViewEngineOptions} from \"./Engine\";\nimport {getCachedEngine, getFromCache, importEngine, setToCache} from \"../utils/cache\";\n\n@ViewEngine(\"react\", {\n  requires: [\"react\"]\n})\nexport class ReactEngine extends Engine {\n  constructor(name: string, options: ViewEngineOptions) {\n    super(name, options);\n    this.patchRequire();\n  }\n\n  async $onInit() {\n    await super.$onInit();\n    await importEngine(\"react-dom/server\", \"ReactDOM\");\n    await importEngine(\"@babel/core\", \"babel\");\n  }\n\n  get babel() {\n    return getCachedEngine(\"babel\");\n  }\n\n  get reactDOM() {\n    return getCachedEngine(\"ReactDOM\");\n  }\n\n  protected patchRequire() {\n    if (require.extensions) {\n      // Ensure JSX is transformed on require\n      if (!require.extensions[\".jsx\"]) {\n        require.extensions[\".jsx\"] = this.requireReact.bind(this);\n      }\n\n      // Supporting .react extension as well as test cases\n      // Using .react extension is not recommended.\n      if (!require.extensions[\".react\"]) {\n        require.extensions[\".react\"] = this.requireReact.bind(this);\n      }\n    }\n  }\n\n  protected configure(options: EngineOptions) {\n    const base = options.base;\n    delete options.base;\n\n    const enableCache = options.cache;\n    delete options.cache;\n\n    const isNonStatic = options.isNonStatic;\n    delete options.isNonStatic;\n    return {base, enableCache, isNonStatic};\n  }\n\n  protected $compile(template: string, options: EngineOptions) {\n    // Assign HTML Base\n    const {base, enableCache, isNonStatic} = this.configure(options);\n\n    // Start Conversion\n    const Code = this.requireReactString(template);\n    const Factory = this.engine.createFactory(Code);\n\n    return () => {\n      const parsed = new Factory(options);\n      const content = isNonStatic ? this.reactDOM.renderToString(parsed) : this.reactDOM.renderToStaticMarkup(parsed);\n\n      if (base) {\n        options.content = content;\n\n        return this.renderWithBase(template, base, enableCache, options);\n      }\n\n      return content;\n    };\n  }\n\n  protected async $compileFile(file: string, options: EngineOptions) {\n    // Assign HTML Base\n    const {base, enableCache, isNonStatic} = this.configure(options);\n\n    let path = resolve(file);\n    delete require.cache[path];\n\n    const ReactDOM = await importEngine(\"react-dom/server\", \"ReactDOM\");\n    const {default: Code} = await import(path);\n    const Factory = this.engine.createFactory(Code);\n\n    return () => {\n      const parsed = new Factory(options);\n      const content = isNonStatic ? ReactDOM.renderToString(parsed) : ReactDOM.renderToStaticMarkup(parsed);\n\n      if (base) {\n        options.content = content;\n\n        return this.renderWithBase(file, base, enableCache, options);\n      }\n\n      return content;\n    };\n  }\n\n  protected renderWithBase(key: string, base: any, enableCache: undefined | boolean, options: EngineOptions) {\n    const baseStr = getFromCache(key) || readFileSync(resolve(base), \"utf8\");\n\n    if (enableCache) {\n      setToCache(key, baseStr);\n    }\n\n    return this.reactBaseTmpl(baseStr, options);\n  }\n\n  protected transformFileSync(filename: string) {\n    return this.babel.transformFileSync(filename, {presets: [\"@babel/preset-react\"]}).code;\n  }\n\n  protected transform(src: string) {\n    return this.babel.transform(src, {presets: [\"@babel/preset-react\"]}).code;\n  }\n\n  protected requireReact(module: any, filename: string) {\n    const compiled = this.transformFileSync(filename);\n    return module._compile(compiled, filename);\n  }\n\n  protected requireReactString(src: string, filename?: string) {\n    if (!filename) filename = \"\";\n    // @ts-ignore\n    const m = new module.constructor();\n    filename = filename || \"\";\n\n    // Compile Using React\n    const compiled = this.transform(src);\n\n    // Compile as a module\n    m.paths = module.paths;\n    m._compile(compiled, filename);\n\n    return m.exports;\n  }\n\n  protected reactBaseTmpl(data: any, options: any) {\n    let exp: any;\n    let regex: any;\n\n    // Iterates through the keys in file object\n    // and interpolate / replace {{key}} with it's value\n    for (const k in options) {\n      if (options.hasOwnProperty(k)) {\n        exp = `{{${k}}}`;\n        regex = new RegExp(exp, \"g\");\n        if (data.match(regex)) {\n          data = data.replace(regex, options[k]);\n        }\n      }\n    }\n\n    return data;\n  }\n}\n"]}