{"version":3,"file":"MarkoEngine.js","sourceRoot":"","sources":["../../../src/components/MarkoEngine.ts"],"names":[],"mappings":";;;;AAAA,+BAA+B;AAC/B,yDAAoD;AACpD,qCAA+C;AAG/C,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,eAAM;IACrC,aAAa,CAAC,QAAgB,EAAE,OAAY,EAAE,QAAiB;QAC7D,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;QAEtC,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,IAAI,cAAc,CAAC;SACvD;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,IAAY,EAAE,OAAsB;QACrD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAE7C,OAAO,IAAA,gBAAS,EAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAQ,CAAC;IAC1D,CAAC;IAES,QAAQ,CAAC,QAAgB,EAAE,OAAsB;QACzD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAEnE,OAAO,IAAA,gBAAS,EAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAQ,CAAC;IAC1D,CAAC;CACF,CAAA;AAtBY,WAAW;IADvB,IAAA,uBAAU,EAAC,OAAO,CAAC;GACP,WAAW,CAsBvB;AAtBY,kCAAW","sourcesContent":["import {promisify} from \"util\";\nimport {ViewEngine} from \"../decorators/viewEngine\";\nimport {Engine, EngineOptions} from \"./Engine\";\n\n@ViewEngine(\"marko\")\nexport class MarkoEngine extends Engine {\n  $cacheOptions(template: string, options: any, fromFile: boolean): any {\n    options.writeToDisk = !!options.cache;\n\n    if (!fromFile) {\n      options.filename = options.filename || \"string.marko\";\n    }\n\n    return options;\n  }\n\n  async $compileFile(file: string, options: EngineOptions) {\n    const $cmp = this.engine.load(file, options);\n\n    return promisify($cmp.renderToString.bind($cmp)) as any;\n  }\n\n  protected $compile(template: string, options: EngineOptions) {\n    const $cmp = this.engine.load(options.filename, template, options);\n\n    return promisify($cmp.renderToString.bind($cmp)) as any;\n  }\n}\n"]}