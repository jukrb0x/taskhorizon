import { __decorate } from "tslib";
import { promisify } from "util";
import { ViewEngine } from "../decorators/viewEngine.js";
import { Engine } from "./Engine.js";
let MarkoEngine = class MarkoEngine extends Engine {
    $cacheOptions(template, options, fromFile) {
        options.writeToDisk = !!options.cache;
        if (!fromFile) {
            options.filename = options.filename || "string.marko";
        }
        return options;
    }
    async $compileFile(file, options) {
        const $cmp = this.engine.load(file, options);
        return promisify($cmp.renderToString.bind($cmp));
    }
    $compile(template, options) {
        const $cmp = this.engine.load(options.filename, template, options);
        return promisify($cmp.renderToString.bind($cmp));
    }
};
MarkoEngine = __decorate([
    ViewEngine("marko")
], MarkoEngine);
export { MarkoEngine };
//# sourceMappingURL=MarkoEngine.js.map