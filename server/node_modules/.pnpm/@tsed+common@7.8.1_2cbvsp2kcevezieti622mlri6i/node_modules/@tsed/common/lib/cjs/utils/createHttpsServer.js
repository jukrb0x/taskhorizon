"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createHttpsServer = void 0;
const tslib_1 = require("tslib");
const di_1 = require("@tsed/di");
const core_1 = require("@tsed/core");
const https_1 = tslib_1.__importDefault(require("https"));
const listenServer_1 = require("./listenServer");
function createHttpsServer(injector, requestListener) {
    const { settings } = injector;
    const httpsPort = settings.get("httpsPort");
    const httpsOptions = settings.get("httpsOptions");
    const server = httpsPort !== false ? https_1.default.createServer(httpsOptions, requestListener) : null;
    injector.addProvider(https_1.default.Server, {
        scope: di_1.ProviderScope.SINGLETON,
        useValue: server
    });
    injector.invoke(https_1.default.Server);
    if (server) {
        const hostInfo = (0, core_1.getHostInfoFromPort)("https", httpsPort);
        return async () => {
            const resolvedHostInfo = await (0, listenServer_1.listenServer)(injector, server, hostInfo);
            settings.set("httpsPort", `${resolvedHostInfo.address}:${resolvedHostInfo.port}`);
            return server;
        };
    }
}
exports.createHttpsServer = createHttpsServer;
//# sourceMappingURL=createHttpsServer.js.map