import { ProviderScope } from "@tsed/di";
import { getHostInfoFromPort } from "@tsed/core";
import Https from "https";
import { listenServer } from "./listenServer.js";
export function createHttpsServer(injector, requestListener) {
    const { settings } = injector;
    const httpsPort = settings.get("httpsPort");
    const httpsOptions = settings.get("httpsOptions");
    const server = httpsPort !== false ? Https.createServer(httpsOptions, requestListener) : null;
    injector.addProvider(Https.Server, {
        scope: ProviderScope.SINGLETON,
        useValue: server
    });
    injector.invoke(Https.Server);
    if (server) {
        const hostInfo = getHostInfoFromPort("https", httpsPort);
        return async () => {
            const resolvedHostInfo = await listenServer(injector, server, hostInfo);
            settings.set("httpsPort", `${resolvedHostInfo.address}:${resolvedHostInfo.port}`);
            return server;
        };
    }
}
//# sourceMappingURL=createHttpsServer.js.map