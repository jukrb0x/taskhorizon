import { InjectorService } from "@tsed/di";
import { PlatformContext } from "../domain/PlatformContext";
import { IncomingEvent } from "../interfaces/IncomingEvent";
import { PlatformRequest } from "../services/PlatformRequest";
import { PlatformResponse } from "../services/PlatformResponse";
export declare function buildIgnoreLog(ignoreUrlPatterns: any[] | undefined): ((ignore: boolean, data: any, url: string) => any) | undefined;
/**
 * Create the TsED context to wrap request, response, injector, etc...
 * @param injector
 * @ignore
 */
export declare function createContext(injector: InjectorService): (event: IncomingEvent) => Promise<PlatformContext<PlatformRequest<any>, PlatformResponse<any>>>;
