{"version":3,"file":"PrismaInitHook.js","sourceRoot":"","sources":["../../../src/hooks/PrismaInitHook.ts"],"names":[],"mappings":";AACA,OAAO,EAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,kBAAkB,EAAC,MAAM,gBAAgB,CAAC;AAC9E,OAAO,EAAC,UAAU,EAAC,MAAM,UAAU,CAAC;AACpC,OAAO,EAAC,SAAS,EAAC,MAAM,uBAAuB,CAAC;AAGzC,IAAM,cAAc,GAApB,MAAM,cAAc;IAEf,SAAS,CAAY;IAGrB,UAAU,CAAa;IAGvB,WAAW,CAAqB;IAGpC,AAAN,KAAK,CAAC,MAAM,CAAC,GAAmB;QAC9B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;QAE7B,OAAO;YACL;gBACE,KAAK,EAAE,wBAAwB;gBAC/B,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;aAClC;YACD;gBACE,KAAK,EAAE,0CAA0C;gBACjD,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE;aAC/C;SACF,CAAC;IACJ,CAAC;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;YAC1B,gBAAgB,EAAE,oCAAoC;YACtD,iBAAiB,EAAE,qBAAqB;SACzC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,GAAmB;QACjC,IAAI,CAAC,WAAW,CAAC,eAAe,CAC9B;YACE,cAAc,EAAE,QAAQ;YACxB,gBAAgB,EAAE,QAAQ;SAC3B,EACD,GAAG,CACJ,CAAC;IACJ,CAAC;IAED,kBAAkB,CAAC,GAAmB;QACpC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CACjC;YACE,MAAM,EAAE,QAAQ;SACjB,EACD,GAAG,CACJ,CAAC;IACJ,CAAC;IAED,SAAS;QACP,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC;gBACtD,QAAQ;oBACN,OAAO,CAAC,EAAE,CAAC,CAAC;gBACd,CAAC;gBACD,KAAK,EAAE,GAAG,EAAE;oBACV,OAAO,CAAC,EAAE,CAAC,CAAC;gBACd,CAAC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AAjEC;IAAC,MAAM,EAAE;8BACY,SAAS;iDAAC;AAE/B;IAAC,MAAM,EAAE;8BACa,UAAU;kDAAC;AAEjC;IAAC,MAAM,EAAE;8BACc,kBAAkB;mDAAC;AAGpC;IADL,MAAM,CAAC,MAAM,CAAC;;;;4CAgBd;AA1BU,cAAc;IAD1B,UAAU,EAAE;GACA,cAAc,CAkE1B;SAlEY,cAAc","sourcesContent":["import {InitCmdContext} from \"@tsed/cli\";\nimport {CliService, Inject, OnExec, ProjectPackageJson} from \"@tsed/cli-core\";\nimport {Injectable} from \"@tsed/di\";\nimport {CliPrisma} from \"../services/CliPrisma\";\n\n@Injectable()\nexport class PrismaInitHook {\n  @Inject()\n  protected cliPrisma: CliPrisma;\n\n  @Inject()\n  protected cliService: CliService;\n\n  @Inject()\n  protected packageJson: ProjectPackageJson;\n\n  @OnExec(\"init\")\n  async onExec(ctx: InitCmdContext) {\n    this.addScripts();\n    this.addDependencies(ctx);\n    this.addDevDependencies(ctx);\n\n    return [\n      {\n        title: \"Generate Prisma schema\",\n        task: () => this.cliPrisma.init()\n      },\n      {\n        title: \"Add Ts.ED configuration to Prisma schema\",\n        task: () => this.cliPrisma.patchPrismaSchema()\n      }\n    ];\n  }\n\n  addScripts() {\n    this.packageJson.addScripts({\n      \"prisma:migrate\": \"npx prisma migrate dev --name init\",\n      \"prisma:generate\": \"npx prisma generate\"\n    });\n  }\n\n  addDependencies(ctx: InitCmdContext) {\n    this.packageJson.addDependencies(\n      {\n        \"@tsed/prisma\": \"latest\",\n        \"@prisma/client\": \"latest\"\n      },\n      ctx\n    );\n  }\n\n  addDevDependencies(ctx: InitCmdContext) {\n    this.packageJson.addDevDependencies(\n      {\n        prisma: \"latest\"\n      },\n      ctx\n    );\n  }\n\n  $onFinish() {\n    return new Promise((resolve) => {\n      this.packageJson.runScript(\"prisma:generate\").subscribe({\n        complete() {\n          resolve([]);\n        },\n        error: () => {\n          resolve([]);\n        }\n      });\n    });\n  }\n}\n"]}