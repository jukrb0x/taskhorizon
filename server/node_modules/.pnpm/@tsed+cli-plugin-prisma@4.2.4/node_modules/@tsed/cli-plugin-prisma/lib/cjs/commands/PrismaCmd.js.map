{"version":3,"file":"PrismaCmd.js","sourceRoot":"","sources":["../../../src/commands/PrismaCmd.ts"],"names":[],"mappings":";;;;AAAA,6CAAmF;AACnF,qDAAgD;AAmBzC,IAAM,SAAS,GAAf,MAAM,SAAS;IAEpB,GAAG,CAAY;IAEf,KAAK,CAAC,KAAK,CAAC,GAAkB;QAC5B,OAAO;YACL;gBACE,KAAK,EAAE,kBAAkB,GAAG,CAAC,OAAO,EAAE;gBACtC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC;aACnD;SACF,CAAC;IACJ,CAAC;CACF,CAAA;AAXC;IAAC,IAAA,iBAAM,GAAE;sCACJ,qBAAS;sCAAC;AAFJ,SAAS;IAbrB,IAAA,kBAAO,EAAC;QACP,IAAI,EAAE,QAAQ;QACd,WAAW,EAAE,sBAAsB;QACnC,IAAI,EAAE;YACJ,OAAO,EAAE;gBACP,WAAW,EAAE,oBAAoB;gBACjC,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,IAAI;aACf;SACF;QACD,OAAO,EAAE,EAAE;QACX,kBAAkB,EAAE,IAAI;KACzB,CAAC;GACW,SAAS,CAYrB;AAZY,8BAAS","sourcesContent":["import {Command, CliDefaultOptions, CommandProvider, Inject} from \"@tsed/cli-core\";\nimport {CliPrisma} from \"../services/CliPrisma\";\n\nexport interface PrismaContext extends CliDefaultOptions {\n  command: string;\n}\n\n@Command({\n  name: \"prisma\",\n  description: \"Run a prisma command\",\n  args: {\n    command: {\n      description: \"The prisma command\",\n      type: String,\n      required: true\n    }\n  },\n  options: {},\n  allowUnknownOption: true\n})\nexport class PrismaCmd implements CommandProvider {\n  @Inject()\n  cli: CliPrisma;\n\n  async $exec(ctx: PrismaContext) {\n    return [\n      {\n        title: `Run Prisma CLI ${ctx.command}`,\n        task: () => this.cli.run(ctx.command, ctx.rawArgs)\n      }\n    ];\n  }\n}\n"]}