{"version":3,"file":"PlatformParams.js","sourceRoot":"","sources":["../../../src/builder/PlatformParams.ts"],"names":[],"mappings":"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","sourcesContent":["import {DIContext, Inject, Injectable, InjectorService, ProviderScope, TokenProvider} from \"@tsed/di\";\nimport {JsonMethodStore, JsonParameterStore, PipeMethods} from \"@tsed/schema\";\nimport {ParamValidationError} from \"../errors/ParamValidationError\";\nimport {ParseExpressionPipe} from \"../pipes/ParseExpressionPipe\";\n\nexport type PlatformParamsScope<Context extends DIContext = DIContext> = {$ctx: Context} & Record<string, any>;\nexport type PlatformParamsCallback<Context extends DIContext = DIContext> = (scope: PlatformParamsScope) => Promise<any>;\n\n/**\n * Platform Params abstraction layer.\n * @platform\n */\n@Injectable({\n  scope: ProviderScope.SINGLETON,\n  imports: [ParseExpressionPipe]\n})\nexport class PlatformParams {\n  @Inject()\n  protected injector: InjectorService;\n\n  getPipes(param: JsonParameterStore) {\n    const get = (pipe: TokenProvider) => {\n      return this.injector.getProvider(pipe)!.priority || 0;\n    };\n\n    const sort = (p1: TokenProvider, p2: TokenProvider) => (get(p1) < get(p2) ? -1 : get(p1) > get(p2) ? 1 : 0);\n    const map = (token: TokenProvider) => this.injector.get<PipeMethods>(token)!;\n\n    return [ParseExpressionPipe, ...param.pipes.sort(sort)].map(map).filter(Boolean);\n  }\n\n  /**\n   * Return a handler with injectable parameters\n   * @param handlerMetadata\n   */\n  compileHandler<Context extends DIContext = DIContext>({\n    propertyKey,\n    token,\n    handler\n  }: {\n    propertyKey?: string | symbol;\n    token?: any;\n    handler?: any;\n  }): PlatformParamsCallback<Context> {\n    if (!token || !propertyKey) {\n      return (scope: PlatformParamsScope) => handler(scope.$ctx);\n    }\n\n    const store = JsonMethodStore.fromMethod(token, propertyKey);\n    const getArguments = this.compile<Context>(store);\n    const provider = this.injector.getProvider(token)!;\n\n    return async (scope: PlatformParamsScope) => {\n      const container = provider.scope === ProviderScope.REQUEST ? scope.$ctx.container : undefined;\n      const [instance, args] = await Promise.all([this.injector.invoke<any>(token, container), getArguments(scope)]);\n\n      return instance[propertyKey].call(instance, ...args, scope.$ctx);\n    };\n  }\n\n  compile<Context extends DIContext = DIContext>(entity: JsonMethodStore): PlatformParamsCallback<Context> {\n    const params = JsonParameterStore.getParams(entity.target, entity.propertyKey);\n    const argsPipes = params.map((param) => {\n      return {\n        param,\n        pipes: this.getPipes(param)\n      };\n    });\n\n    return (scope) => {\n      const promises = argsPipes.map(({param, pipes}) => this.getArg(scope, pipes, param));\n      return Promise.all(promises);\n    };\n  }\n\n  async getArg<Context extends DIContext = DIContext>(scope: PlatformParamsScope, pipes: PipeMethods[], param: JsonParameterStore) {\n    return pipes.reduce(async (value: any | Promise<any>, pipe) => {\n      value = await value;\n\n      try {\n        return await pipe.transform(value, param);\n      } catch (er) {\n        throw ParamValidationError.from(param, er);\n      }\n    }, scope);\n  }\n}\n"]}