{"version":3,"file":"useType.js","sourceRoot":"","sources":["../../../src/decorators/useType.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,GAAG,EAAE,YAAY,EAAC,MAAM,cAAc,CAAC;AAC/C,OAAO,EAAC,OAAO,EAAC,MAAM,WAAW,CAAC;AAElC;;;;;;;;;;GAUG;AACH,MAAM,UAAU,OAAO,CAAC,OAAoC;IAC1D,OAAO,OAAO,CAAC,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;QACpC,IAAI,OAAO,EAAE;YACX,OAAO,YAAY,CAAC,OAAO,CAAC,CAAC;SAC9B;QAED,IAAI,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE;YAClH,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC;SACtB;IACH,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import {Type} from \"@tsed/core\";\nimport {Any, CollectionOf} from \"@tsed/schema\";\nimport {ParamFn} from \"./paramFn\";\n\n/**\n * Set the type of the item collection.\n *\n * Prefer @@CollectionOf@@ usage.\n *\n * @param useType\n * @decorator\n * @operation\n * @input\n * @alias CollectionOf\n */\nexport function UseType(useType: undefined | any | Type<any>) {\n  return ParamFn((entity, parameters) => {\n    if (useType) {\n      return CollectionOf(useType);\n    }\n\n    if (entity.isCollection && entity.type === Object && [undefined, \"object\"].includes(entity.itemSchema.get(\"type\"))) {\n      Any()(...parameters);\n    }\n  });\n}\n"]}