import { isPrimitive, nameOf } from "@tsed/core";
export class PlatformLayer {
    provider;
    path = "";
    method;
    handlers = [];
    router;
    opts = {};
    #args;
    constructor(props = {}) {
        Object.assign(this, props);
    }
    set(args) {
        this.#args = args;
    }
    getArgs() {
        return [this.path, ...this.#args].filter(Boolean);
    }
    isProvider() {
        return !!this.provider;
    }
    inspect() {
        return {
            path: this.path,
            method: this.method,
            handlers: this.handlers.map((item) => String(item)),
            opts: Object.entries(this.opts).reduce((obj, [key, value]) => {
                return {
                    ...obj,
                    [key]: isPrimitive(value) ? value : nameOf(value)
                };
            }, {})
        };
    }
}
//# sourceMappingURL=PlatformLayer.js.map