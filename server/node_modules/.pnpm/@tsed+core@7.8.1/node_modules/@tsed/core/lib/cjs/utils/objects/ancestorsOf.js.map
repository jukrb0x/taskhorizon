{"version":3,"file":"ancestorsOf.js","sourceRoot":"","sources":["../../../../src/utils/objects/ancestorsOf.ts"],"names":[],"mappings":";;;AAAA,uCAAkC;AAClC,6CAA+C;AAC/C,qCAAgC;AAEhC;;;;GAIG;AACH,SAAgB,WAAW,CAAC,MAAW;IACrC,MAAM,OAAO,GAAG,EAAE,CAAC;IAEnB,IAAI,aAAa,GAAG,IAAA,iBAAO,EAAC,MAAM,CAAC,CAAC;IAEpC,OAAO,aAAa,IAAI,IAAA,eAAM,EAAC,aAAa,CAAC,KAAK,EAAE,EAAE;QACpD,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC/B,aAAa,GAAG,IAAA,8BAAiB,EAAC,aAAa,CAAC,CAAC;KAClD;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAXD,kCAWC","sourcesContent":["import {classOf} from \"./classOf\";\nimport {getInheritedClass} from \"./ancestorOf\";\nimport {nameOf} from \"./nameOf\";\n\n/**\n *\n * @param target\n * @returns {Array}\n */\nexport function ancestorsOf(target: any) {\n  const classes = [];\n\n  let currentTarget = classOf(target);\n\n  while (currentTarget && nameOf(currentTarget) !== \"\") {\n    classes.unshift(currentTarget);\n    currentTarget = getInheritedClass(currentTarget);\n  }\n\n  return classes;\n}\n"]}