{"version":3,"file":"CliHooks.js","sourceRoot":"","sources":["../../../src/services/CliHooks.ts"],"names":[],"mappings":";;;;AAAA,iCAA6D;AAGtD,IAAM,QAAQ,GAAd,MAAM,QAAQ;IAEnB,QAAQ,CAAkB;IAE1B,KAAK,CAAC,IAAI,CAAC,QAAgB,EAAE,GAAW,EAAE,GAAG,IAAW;QACtD,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAC/C,IAAI,OAAO,GAAQ,EAAE,CAAC;QAEtB,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAChC,IAAI,QAAQ,CAAC,QAAQ,EAAE;gBACrB,MAAM,QAAQ,GAAQ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAE,CAAC;gBAEzD,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;oBAChC,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;oBAChD,IAAI,KAAK,EAAE;wBACT,KAAK,MAAM,WAAW,IAAI,KAAK,EAAE;4BAC/B,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,QAAQ,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;yBAChE;qBACF;iBACF;aACF;SACF;QAED,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;IACrD,CAAC;CACF,CAAA;AAxBC;IAAC,IAAA,WAAM,GAAE;sCACC,oBAAe;0CAAC;AAFf,QAAQ;IADpB,IAAA,eAAU,GAAE;GACA,QAAQ,CAyBpB;AAzBY,4BAAQ","sourcesContent":["import {Inject, Injectable, InjectorService} from \"@tsed/di\";\n\n@Injectable()\nexport class CliHooks {\n  @Inject()\n  injector: InjectorService;\n\n  async emit(hookName: string, cmd: string, ...args: any[]) {\n    const providers = this.injector.getProviders();\n    let results: any = [];\n\n    for (const provider of providers) {\n      if (provider.useClass) {\n        const instance: any = this.injector.get(provider.token)!;\n\n        if (provider.store.has(hookName)) {\n          const props = provider.store.get(hookName)[cmd];\n          if (props) {\n            for (const propertyKey of props) {\n              results = results.concat(await instance[propertyKey](...args));\n            }\n          }\n        }\n      }\n    }\n\n    return results.filter((o: any) => o !== undefined);\n  }\n}\n"]}