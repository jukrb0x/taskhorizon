"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createInjector = exports.getLogger = void 0;
const di_1 = require("@tsed/di");
const logger_1 = require("@tsed/logger");
const CliConfiguration_1 = require("../services/CliConfiguration");
const ProjectPackageJson_1 = require("../services/ProjectPackageJson");
let logger;
function getLogger() {
    return logger;
}
exports.getLogger = getLogger;
function createConfiguration(injector) {
    injector.addProvider(CliConfiguration_1.CliConfiguration);
    return injector.invoke(CliConfiguration_1.CliConfiguration);
}
function createInjector(settings = {}) {
    const injector = new di_1.InjectorService();
    injector.settings = createConfiguration(injector);
    logger = injector.logger = new logger_1.Logger(settings.name || "CLI");
    injector.addProvider(ProjectPackageJson_1.ProjectPackageJson);
    injector.settings.set(settings);
    /* istanbul ignore next */
    if (injector.settings.env === "test") {
        injector.logger.stop();
    }
    else {
        /* istanbul ignore next */
        injector.logger.level = injector.settings.logger?.level || "warn";
        injector.logger.appenders
            .set("stdout", {
            type: "stdout",
            layout: {
                type: "pattern",
                pattern: "[%d{hh:mm:ss}] %m"
            },
            levels: ["info", "debug"]
        })
            .set("stderr", {
            type: "stderr",
            layout: {
                type: "pattern",
                pattern: "[%d{hh:mm:ss}][%p] %m"
            },
            levels: ["trace", "fatal", "error", "warn"]
        });
    }
    return injector;
}
exports.createInjector = createInjector;
//# sourceMappingURL=createInjector.js.map