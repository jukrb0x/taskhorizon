{"version":3,"file":"CommandProvider.js","sourceRoot":"","sources":["../../../src/interfaces/CommandProvider.ts"],"names":[],"mappings":"","sourcesContent":["import {Answers, QuestionCollection} from \"inquirer\";\nimport {Tasks} from \"./Tasks\";\n\nexport type QuestionOptions<T extends Answers = Answers> = QuestionCollection<T>;\n\nexport interface CommandProvider<Ctx = any> {\n  /**\n   * Run a function before the main prompt. Useful for pre-loading data from the file system\n   * @param initialOptions\n   */\n  $beforePrompt?(initialOptions: Partial<Ctx>): Partial<Ctx>;\n\n  /**\n   * Hook to create the main prompt for the command\n   * See https://github.com/enquirer/enquirer for more detail on question configuration.\n   * @param initialOptions\n   */\n  $prompt?<T extends Answers = Answers>(initialOptions: Partial<Ctx>): QuestionOptions<T> | Promise<QuestionOptions<T>>;\n\n  /**\n   * Hook to map options\n   * @param ctx\n   */\n  $mapContext?(ctx: Partial<Ctx>): Ctx;\n\n  /**\n   * Run something before the exec hook\n   * @param ctx\n   */\n  $beforeExec?(ctx: Ctx): Promise<any>;\n\n  /**\n   * Run a command\n   * @param ctx\n   */\n  $exec(ctx: Ctx): Tasks | Promise<Tasks> | any | Promise<any>;\n\n  /**\n   * Run commands after the npm/yarn install\n   * @param ctx\n   */\n  $postInstall?(ctx: Ctx): Tasks | Promise<Tasks> | any | Promise<any>;\n\n  $afterPostInstall?(ctx: Ctx): Tasks | Promise<Tasks> | any | Promise<any>;\n}\n"]}