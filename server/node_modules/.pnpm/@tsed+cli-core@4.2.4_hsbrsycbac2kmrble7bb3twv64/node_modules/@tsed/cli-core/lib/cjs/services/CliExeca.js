"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CliExeca = void 0;
const tslib_1 = require("tslib");
const di_1 = require("@tsed/di");
const execa_1 = tslib_1.__importDefault(require("execa"));
const operators_1 = require("rxjs/operators");
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
const split_1 = tslib_1.__importDefault(require("split"));
const streamToObservable_1 = require("../utils/streamToObservable");
let CliExeca = class CliExeca {
    raw = execa_1.default;
    /**
     *
     * @param cmd
     * @param args
     * @param opts
     */
    run(cmd, args, opts) {
        const cp = this.raw(cmd, args, opts);
        const stdout = (0, streamToObservable_1.streamToObservable)(cp.stdout.pipe((0, split_1.default)()), { await: cp });
        const stderr = (0, streamToObservable_1.streamToObservable)(cp.stderr.pipe((0, split_1.default)()), { await: cp });
        return stdout.pipe((0, operators_1.mergeWith)(stderr)).pipe((0, operators_1.filter)(Boolean));
    }
    runSync(cmd, args, opts) {
        return this.raw.sync(cmd, args, opts);
    }
    async getAsync(cmd, args, opts) {
        return (await this.raw(cmd, args, opts)).stdout;
    }
    get(cmd, args, opts) {
        return this.raw.sync(cmd, args, opts).stdout;
    }
};
CliExeca = tslib_1.__decorate([
    (0, di_1.Injectable)()
], CliExeca);
exports.CliExeca = CliExeca;
//# sourceMappingURL=CliExeca.js.map