{"version":3,"file":"object.js","sourceRoot":"","sources":["../../../../src/utils/hbs/object.ts"],"names":[],"mappings":"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","sourcesContent":["import {getValue, isNumber, isObject} from \"@tsed/core\";\nimport {helpers as array} from \"./array\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport util from \"handlebars-utils\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport createFrame from \"create-frame\";\nconst hasOwn = Object.hasOwnProperty;\nexport const helpers: any = {};\n\n/**\n * Extend the context with the properties of other objects.\n * A shallow merge is performed to avoid mutating the context.\n *\n * @param {Object} `objects` One or more objects to extend.\n * @return {Object}\n * @api public\n */\nhelpers.extend = function (/*objects*/) {\n  // eslint-disable-next-line prefer-rest-params\n  const args = [].slice.call(arguments);\n  let opts = {};\n\n  if (util.isOptions(args[args.length - 1])) {\n    // remove handlebars options object\n    opts = args.pop().hash;\n    // re-add handlebars options.hash object\n    args.push(opts);\n  }\n\n  const context: any = {};\n  for (let i = 0; i < args.length; i++) {\n    const obj = args[i];\n    if (util.isObject(obj)) {\n      const keys = Object.keys(obj);\n      for (let j = 0; j < keys.length; j++) {\n        const key = keys[j];\n        context[key] = obj[key];\n      }\n    }\n  }\n\n  return context;\n};\n\n/**\n * Block helper that iterates over the properties of\n * an object, exposing each key and value on the context.\n *\n * @param {Object} `context`\n * @param {Object} `options`\n * @return {String}\n * @block\n * @api public\n */\n\nhelpers.forIn = function (obj: any, options: any) {\n  if (!util.isOptions(options)) {\n    return obj.inverse(this);\n  }\n\n  const data = createFrame(options, options.hash);\n  let result = \"\";\n\n  for (const key in obj) {\n    data.key = key;\n    result += options.fn(obj[key], {data: data});\n  }\n  return result;\n};\n\n/**\n * Block helper that iterates over the **own** properties of\n * an object, exposing each key and value on the context.\n *\n * @param {Object} `obj` The object to iterate over.\n * @param {Object} `options`\n * @return {String}\n * @block\n * @api public\n */\n\nhelpers.forOwn = function (obj: any, options: any) {\n  if (!util.isOptions(options)) {\n    return obj.inverse(this);\n  }\n\n  const data = createFrame(options, options.hash);\n  let result = \"\";\n\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      data.key = key;\n      result += options.fn(obj[key], {data: data});\n    }\n  }\n  return result;\n};\n\n/**\n * Take arguments and, if they are string or number, convert them to a dot-delineated object property path.\n *\n * @param {String|Number} `prop` The property segments to assemble (can be multiple).\n * @return {String}\n * @api public\n */\n\nhelpers.toPath = function (...args: any[]) {\n  const prop = [];\n  for (let i = 0; i < arguments.length; i++) {\n    if (typeof args[i] === \"string\" || typeof args[i] === \"number\") {\n      prop.push(args[i]);\n    }\n  }\n  return prop.join(\".\");\n};\n\n/**\n * Use property paths (`a.b.c`) to get a value or nested value from\n * the context. Works as a regular helper or block helper.\n *\n * @param {String} `prop` The property to get, optionally using dot notation for nested properties.\n * @param {Object} `context` The context object\n * @param {Object} `options` The handlebars options object, if used as a block helper.\n * @return {String}\n * @block\n * @api public\n */\n\nhelpers.get = function (prop: any, context: any, options: any) {\n  const val = getValue(context, prop);\n  if (options && options.fn) {\n    return val ? options.fn(val) : options.inverse(context);\n  }\n  return val;\n};\n\n/**\n * Return true if `key` is an own, enumerable property\n * of the given `context` object.\n *\n * ```handlebars\n * {{hasOwn context key}}\n * ```\n *\n * @param {String} `key`\n * @param {Object} `context` The context object.\n * @return {Boolean}\n * @api public\n */\n\nhelpers.hasOwn = function (context: any, key: string) {\n  return hasOwn.call(context, key);\n};\n\n/**\n * Return true if `value` is an object.\n *\n * ```handlebars\n * {{isObject \"foo\"}}\n * //=> false\n * ```\n * @param {String} `value`\n * @return {Boolean}\n * @api public\n */\n\nhelpers.isObject = isObject;\n\n/**\n * Parses the given string using `JSON.parse`.\n *\n * ```handlebars\n * <!-- string: '{\"foo\": \"bar\"}' -->\n * {{JSONparse string}}\n * <!-- results in: { foo: 'bar' } -->\n * ```\n * @param {String} `string` The string to parse\n * @contributor github.com/keeganstreet\n * @block\n * @api public\n */\n\nhelpers.JSONparse = function (str: string) {\n  return JSON.parse(str);\n};\n\n/**\n * Stringify an object using `JSON.stringify`.\n *\n * ```handlebars\n * <!-- object: { foo: 'bar' } -->\n * {{JSONstringify object}}\n * <!-- results in: '{\"foo\": \"bar\"}' -->\n * ```\n * @param {Object} `obj` Object to stringify\n * @return {String}\n * @api public\n */\n\nhelpers.JSONstringify = function (obj: any, indent: string | number | undefined) {\n  if (!isNumber(indent)) {\n    indent = 0;\n  }\n  return JSON.stringify(obj, null, indent);\n};\n\n/**\n * Deeply merge the properties of the given `objects` with the\n * context object.\n *\n * @param {Object} `object` The target object. Pass an empty object to shallow clone.\n * @param {Object} `objects`\n * @return {Object}\n * @api public\n */\nhelpers.merge = function (...args1: any) {\n  // eslint-disable-next-line prefer-rest-params\n  const args = [].slice.call(args1);\n  let opts = {};\n\n  if (util.isOptions(args[args.length - 1])) {\n    // remove handlebars options object\n    opts = args.pop().hash;\n    // re-add options.hash\n    args.push(opts);\n  }\n\n  return Object.assign.apply(null, args);\n};\n\n/**\n * Alias for parseJSON. this will be\n * deprecated in a future release\n */\n\nhelpers.parseJSON = helpers.JSONparse;\n\n/**\n * Pick properties from the context object.\n *\n * @param {Array|String} `properties` One or more properties to pick.\n * @param {Object} `context`\n * @param {Object} `options` Handlebars options object.\n * @return {Object} Returns an object with the picked values. If used as a block helper, the values are passed as context to the inner block. If no values are found, the context is passed to the inverse block.\n * @block\n * @api public\n */\n\nhelpers.pick = function (props: any, context: any, options: any) {\n  const keys = array.arrayify(props);\n  const len = keys.length;\n  let i = -1;\n  let result = {};\n\n  while (++i < len) {\n    result = helpers.extend({}, result, getValue(context, keys[i]));\n  }\n\n  if (options.fn) {\n    if (Object.keys(result).length) {\n      return options.fn(result);\n    }\n    return options.inverse(context);\n  }\n  return result;\n};\n\n/**\n * Alias for JSONstringify. this will be\n * deprecated in a future release\n */\n\nhelpers.stringify = helpers.JSONstringify;\n"]}