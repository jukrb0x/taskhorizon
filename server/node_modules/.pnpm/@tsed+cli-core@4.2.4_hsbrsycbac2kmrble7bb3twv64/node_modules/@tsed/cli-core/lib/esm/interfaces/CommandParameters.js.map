{"version":3,"file":"CommandParameters.js","sourceRoot":"","sources":["../../../src/interfaces/CommandParameters.ts"],"names":[],"mappings":"","sourcesContent":["import {Type} from \"@tsed/core\";\n\nexport interface CommandArg {\n  /**\n   * Description of the argument\n   */\n  description: string;\n  /**\n   * Use type to parse the option (String, Number, Boolean, Array)\n   */\n  type?: Type<any>;\n  /**\n   * Use item type to parse items\n   */\n  itemType?: Type<any>;\n  /**\n   * Default value\n   */\n  defaultValue?: string | number | boolean | any;\n  /**\n   * Define a require option\n   */\n  required?: boolean;\n}\n\nexport interface CommandOptions {\n  /**\n   * Description of the commander.option()\n   */\n  description: string;\n  /**\n   * Use type to parse the option (String, Number, Boolean, Array)\n   */\n  type?: Type<any>;\n  /**\n   * Use item type to parse items\n   */\n  itemType?: Type<any>;\n  /**\n   * Default value\n   */\n  defaultValue?: string | number | boolean | any;\n  /**\n   * Define a require option\n   */\n  required?: boolean;\n  /**\n   * Use a custom Parser\n   * @param value\n   */\n  customParser?: (value: any) => any;\n}\n\nexport interface CommandParameters {\n  /**\n   * name commands\n   */\n  name: string;\n  /**\n   * CommandProvider description\n   */\n  description: string;\n  /**\n   * CommandProvider arguments\n   */\n  args?: {\n    [key: string]: CommandArg;\n  };\n  /**\n   * CommandProvider options\n   */\n  options?: {\n    [key: string]: CommandOptions;\n  };\n\n  allowUnknownOption?: boolean;\n\n  [key: string]: any;\n}\n"]}