{"version":3,"file":"array.js","sourceRoot":"","sources":["../../../../src/utils/hbs/array.ts"],"names":[],"mappings":"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","sourcesContent":["import {getValue, isArray, isNumber, isObject, isString} from \"@tsed/core\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport createFrame from \"create-frame\";\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport util from \"handlebars-utils\";\n\nexport const helpers: any = {};\n\n/**\n * Returns all of the items in an array after the specified index.\n * Opposite of [before](#before).\n *\n * ```handlebars\n * <!-- array: ['a', 'b', 'c'] -->\n * {{after array 1}}\n * <!-- results in: '[\"c\"]' -->\n * ```\n * @param {Array} `array` Collection\n * @param {Number} `n` Starting index (number of items to exclude)\n * @return {Array} Array exluding `n` items.\n * @api public\n */\n\nhelpers.after = function (array: string | any[], n: any) {\n  if (util.isUndefined(array)) return \"\";\n  return array.slice(n);\n};\n\n/**\n * Cast the given `value` to an array.\n *\n * ```handlebars\n * {{arrayify \"foo\"}}\n * <!-- results in: [ \"foo\" ] -->\n * ```\n * @param {any} `value`\n * @return {Array}\n * @api public\n */\n\nhelpers.arrayify = function (value: any) {\n  return value ? (isArray(value) ? value : [value]) : [];\n};\n\n/**\n * Return all of the items in the collection before the specified\n * count. Opposite of [after](#after).\n *\n * ```handlebars\n * <!-- array: ['a', 'b', 'c'] -->\n * {{before array 2}}\n * <!-- results in: '[\"a\", \"b\"]' -->\n * ```\n * @param {Array} `array`\n * @param {Number} `n`\n * @return {Array} Array excluding items after the given number.\n * @api public\n */\n\nhelpers.before = function (array: string | any[], n: number) {\n  if (util.isUndefined(array)) return \"\";\n  return array.slice(0, -n);\n};\n\n/**\n * ```handlebars\n * <!-- array: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'] -->\n * {{#eachIndex array}}\n *   {{item}} is {{index}}\n * {{/eachIndex}}\n * ```\n * @param {Array} `array`\n * @param {Object} `options`\n * @return {String}\n * @block\n * @api public\n */\n\nhelpers.eachIndex = function (array: string | any[], options: {fn: (arg0: {item: any; index: number}) => string}) {\n  let result = \"\";\n  for (let i = 0; i < array.length; i++) {\n    result += options.fn({item: array[i], index: i});\n  }\n  return result;\n};\n\n/**\n * Block helper that filters the given array and renders the block for values that\n * evaluate to `true`, otherwise the inverse block is returned.\n *\n * ```handlebars\n * <!-- array: ['a', 'b', 'c'] -->\n * {{#filter array \"foo\"}}AAA{{else}}BBB{{/filter}}\n * <!-- results in: 'BBB' -->\n * ```\n * @param {Array} `array`\n * @param {any} `value`\n * @param {Object} `options`\n * @return {String}\n * @block\n * @api public\n */\n\nhelpers.filter = function (\n  array: any[],\n  value: any,\n  options: {hash: {property: any; prop: any}; fn: (arg0: any) => string; inverse: (arg0: any) => any}\n) {\n  let content = \"\";\n  let results = [];\n\n  // filter on a specific property\n  const prop = options.hash && (options.hash.property || options.hash.prop);\n  if (prop) {\n    results = array.filter(function (val) {\n      return value === getValue(val, prop);\n    });\n  } else {\n    // filter on a string value\n    results = array.filter(function (v) {\n      return value === v;\n    });\n  }\n\n  if (results && results.length > 0) {\n    for (let i = 0; i < results.length; i++) {\n      content += options.fn(results[i]);\n    }\n    return content;\n  }\n  return options.inverse(this);\n};\n\n/**\n * Returns the first item, or first `n` items of an array.\n *\n * ```handlebars\n * {{first \"['a', 'b', 'c', 'd', 'e']\" 2}}\n * <!-- results in: '[\"a\", \"b\"]' -->\n * ```\n * @param {Array} `array`\n * @param {Number} `n` Number of items to return, starting at `0`.\n * @return {Array}\n * @api public\n */\n\nhelpers.first = function (array: string | any[], n: any) {\n  if (array === undefined) return \"\";\n  if (!isNumber(n)) {\n    return array[0];\n  }\n  return array.slice(0, n);\n};\n\n/**\n * Iterates over each item in an array and exposes the current item\n * in the array as context to the inner block. In addition to\n * the current array item, the helper exposes the following variables\n * to the inner block:\n *\n * - `index`\n * - `total`\n * - `isFirst`\n * - `isLast`\n *\n * Also, `@index` is exposed as a private variable, and additional\n * private variables may be defined as hash arguments.\n *\n * ```handlebars\n * <!-- accounts = [\n *   {'name': 'John', 'email': 'john@example.com'},\n *   {'name': 'Malcolm', 'email': 'malcolm@example.com'},\n *   {'name': 'David', 'email': 'david@example.com'}\n * ] -->\n *\n * {{#forEach accounts}}\n *   <a href=\"mailto:{{ email }}\" title=\"Send an email to {{ name }}\">\n *     {{ name }}\n *   </a>{{#unless isLast}}, {{/unless}}\n * {{/forEach}}\n * ```\n * @source <http://stackoverflow.com/questions/13861007>\n * @param {Array} `array`\n * @return {String}\n * @block\n * @api public\n */\n\nhelpers.forEach = function (array: string | any[], options: any) {\n  const data = createFrame(options, options.hash);\n  const len = array.length;\n  let buffer = \"\";\n  let i = -1;\n\n  while (++i < len) {\n    const item = array[i];\n    data.index = i;\n    item.index = i + 1;\n    item.total = len;\n    item.isFirst = i === 0;\n    item.isLast = i === len - 1;\n    buffer += options.fn(item, {data: data});\n  }\n  return buffer;\n};\n\n/**\n * Block helper that renders the block if an array has the\n * given `value`. Optionally specify an inverse block to render\n * when the array does not have the given value.\n *\n * ```handlebars\n * <!-- array: ['a', 'b', 'c'] -->\n * {{#inArray array \"d\"}}\n *   foo\n * {{else}}\n *   bar\n * {{/inArray}}\n * <!-- results in: 'bar' -->\n * ```\n * @param {Array} `array`\n * @param {any} `value`\n * @param {Object} `options`\n * @return {String}\n * @block\n * @api public\n */\n\nhelpers.inArray = function (array: any[], value: any, options: any) {\n  return util.value(util.indexOf(array, value) > -1, this, options);\n};\n\n/**\n * Returns true if `value` is an es5 array.\n *\n * ```handlebars\n * {{isArray \"abc\"}}\n * <!-- results in: false -->\n *\n * <!-- array: [1, 2, 3] -->\n * {{isArray array}}\n * <!-- results in: true -->\n * ```\n * @param {any} `value` The value to test.\n * @return {Boolean}\n * @api public\n */\n\nhelpers.isArray = function (value: any) {\n  return Array.isArray(value);\n};\n\n/**\n * Returns the item from `array` at index `idx`.\n *\n * ```handlebars\n * <!-- array: ['a', 'b', 'c'] -->\n * {{itemAt array 1}}\n * <!-- results in: 'b' -->\n * ```\n * @param {Array} `array`\n * @param {Number} `idx`\n * @return {any} `value`\n * @block\n * @api public\n */\n\nhelpers.itemAt = function (array: string | any[], idx: number) {\n  array = util.result(array);\n  if (isArray(array)) {\n    idx = isNumber(idx) ? +idx : 0;\n    if (idx < 0) {\n      return array[array.length + idx];\n    }\n    if (idx < array.length) {\n      return array[idx];\n    }\n  }\n};\n\n/**\n * Join all elements of array into a string, optionally using a\n * given separator.\n *\n * ```handlebars\n * <!-- array: ['a', 'b', 'c'] -->\n * {{join array}}\n * <!-- results in: 'a, b, c' -->\n *\n * {{join array '-'}}\n * <!-- results in: 'a-b-c' -->\n * ```\n * @param {Array} `array`\n * @param {String} `separator` The separator to use. Defaults to `, `.\n * @return {String}\n * @api public\n */\n\nhelpers.join = function (array: string | any[], separator: string | undefined) {\n  if (isString(array)) return array;\n  if (!isArray(array)) return \"\";\n  separator = util.isString(separator) ? separator : \", \";\n  return array.join(separator);\n};\n\n/**\n * Returns true if the the length of the given `value` is equal\n * to the given `length`. Can be used as a block or inline helper.\n *\n * @param {Array|String} `value`\n * @param {Number} `length`\n * @param {Object} `options`\n * @return {String}\n * @block\n * @api public\n */\n\nhelpers.equalsLength = function (value: string | any[], length: number, options: any) {\n  if (util.isOptions(length)) {\n    options = length;\n    length = 0;\n  }\n\n  let len = 0;\n  if (typeof value === \"string\" || Array.isArray(value)) {\n    len = value.length;\n  }\n\n  return util.value(len === length, this, options);\n};\n\n/**\n * Returns the last item, or last `n` items of an array or string.\n * Opposite of [first](#first).\n *\n * ```handlebars\n * <!-- var value = ['a', 'b', 'c', 'd', 'e'] -->\n *\n * {{last value}}\n * <!-- results in: ['e'] -->\n *\n * {{last value 2}}\n * <!-- results in: ['d', 'e'] -->\n *\n * {{last value 3}}\n * <!-- results in: ['c', 'd', 'e'] -->\n * ```\n * @param {Array|String} `value` Array or string.\n * @param {Number} `n` Number of items to return from the end of the array.\n * @return {Array}\n * @api public\n */\n\nhelpers.last = function (value: string | any[], n: number) {\n  if (!isArray(value) && typeof value !== \"string\") {\n    return \"\";\n  }\n  if (!isNumber(n)) {\n    return value[value.length - 1];\n  }\n  return value.slice(-Math.abs(n));\n};\n\n/**\n * Returns the length of the given string or array.\n *\n * ```handlebars\n * {{length '[\"a\", \"b\", \"c\"]'}}\n * <!-- results in: 3 -->\n *\n * <!-- results in: myArray = ['a', 'b', 'c', 'd', 'e']; -->\n * {{length myArray}}\n * <!-- results in: 5 -->\n *\n * <!-- results in: myObject = {'a': 'a', 'b': 'b'}; -->\n * {{length myObject}}\n * <!-- results in: 2 -->\n * ```\n * @param {Array|Object|String} `value`\n * @return {Number} The length of the value.\n * @api public\n */\n\nhelpers.length = function (value: string | any[]) {\n  if (isObject(value) && !util.isOptions(value)) {\n    value = Object.keys(value);\n  }\n  if (typeof value === \"string\" || Array.isArray(value)) {\n    return value.length;\n  }\n  return 0;\n};\n\n/**\n * Returns a new array, created by calling `function` on each\n * element of the given `array`. For example,\n *\n * ```handlebars\n * <!-- array: ['a', 'b', 'c'], and \"double\" is a\n * fictitious function that duplicates letters -->\n * {{map array double}}\n * <!-- results in: '[\"aa\", \"bb\", \"cc\"]' -->\n * ```\n *\n * @param {Array} `array`\n * @param {Function} `fn`\n * @return {String}\n * @api public\n */\n\nhelpers.map = function (array: string | any[], iter: (arg0: any, arg1: number, arg2: any[]) => any) {\n  if (!Array.isArray(array)) return \"\";\n  const len = array.length;\n  const res = new Array(len);\n  let i = -1;\n\n  if (typeof iter !== \"function\") {\n    return array;\n  }\n\n  while (++i < len) {\n    res[i] = iter(array[i], i, array);\n  }\n  return res;\n};\n\n/**\n * Map over the given object or array or objects and create an array of values\n * from the given `prop`. Dot-notation may be used (as a string) to get\n * nested properties.\n *\n * ```handlebars\n * // {{pluck items \"data.title\"}}\n * <!-- results in: '[\"aa\", \"bb\", \"cc\"]' -->\n * ```\n * @param {Array|Object} `collection`\n * @param {Function} `prop`\n * @return {String}\n * @api public\n */\n\nhelpers.pluck = function (arr: string | any[], prop: any) {\n  if (util.isUndefined(arr)) return \"\";\n  const res = [];\n  for (let i = 0; i < arr.length; i++) {\n    const val = getValue(arr[i], prop);\n    if (typeof val !== \"undefined\") {\n      res.push(val);\n    }\n  }\n  return res;\n};\n\n/**\n * Reverse the elements in an array, or the characters in a string.\n *\n * ```handlebars\n * <!-- value: 'abcd' -->\n * {{reverse value}}\n * <!-- results in: 'dcba' -->\n * <!-- value: ['a', 'b', 'c', 'd'] -->\n * {{reverse value}}\n * <!-- results in: ['d', 'c', 'b', 'a'] -->\n * ```\n * @param {Array|String} `value`\n * @return {Array|String} Returns the reversed string or array.\n * @api public\n */\n\nhelpers.reverse = function (val: string | []) {\n  if (Array.isArray(val)) {\n    val.reverse();\n    return val;\n  }\n  if (val && isString(val)) {\n    return val.split(\"\").reverse().join(\"\");\n  }\n};\n\n/**\n * Block helper that returns the block if the callback returns true\n * for some value in the given array.\n *\n * ```handlebars\n * <!-- array: [1, 'b', 3] -->\n * {{#some array isString}}\n *   Render me if the array has a string.\n * {{else}}\n *   Render me if it doesn't.\n * {{/some}}\n * <!-- results in: 'Render me if the array has a string.' -->\n * ```\n * @param {Array} `array`\n * @param {Function} `iter` Iteratee\n * @param {Options} Handlebars provided options object\n * @return {String}\n * @block\n * @api public\n */\n\nhelpers.some = function (array: string | any[], iter: (arg0: any, arg1: number, arg2: any[]) => any, options: any) {\n  if (Array.isArray(array)) {\n    for (let i = 0; i < array.length; i++) {\n      if (iter(array[i], i, array)) {\n        return options.fn(this);\n      }\n    }\n  }\n  return options.inverse(this);\n};\n\n/**\n * Sort the given `array`. If an array of objects is passed,\n * you may optionally pass a `key` to sort on as the second\n * argument. You may alternatively pass a sorting function as\n * the second argument.\n *\n * ```handlebars\n * <!-- array: ['b', 'a', 'c'] -->\n * {{sort array}}\n * <!-- results in: '[\"a\", \"b\", \"c\"]' -->\n * ```\n *\n * @param {Array} `array` the array to sort.\n * @param {String|Function} `key` The object key to sort by, or sorting function.\n * @api public\n */\n\nhelpers.sort = function (array: any[], options: any) {\n  if (!Array.isArray(array)) return \"\";\n  if (getValue(options, \"hash.reverse\")) {\n    return array.sort().reverse();\n  }\n  return array.sort();\n};\n\n/**\n * Block helper that return an array with all duplicate\n * values removed. Best used along with a [each](#each) helper.\n *\n * ```handlebars\n * <!-- array: ['a', 'a', 'c', 'b', 'e', 'e'] -->\n * {{#each (unique array)}}{{.}}{{/each}}\n * <!-- results in: 'acbe' -->\n * ```\n * @param {Array} `array`\n * @param {Object} `options`\n * @return {Array}\n * @api public\n */\n\nhelpers.unique = function (array: any[]) {\n  if (util.isUndefined(array)) return \"\";\n\n  return array.filter(function (item, index, arr) {\n    return arr.indexOf(item) === index;\n  });\n};\n"]}