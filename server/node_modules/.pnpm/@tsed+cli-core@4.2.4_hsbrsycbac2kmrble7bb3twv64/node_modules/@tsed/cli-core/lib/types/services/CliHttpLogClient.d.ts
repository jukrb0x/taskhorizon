import { Logger } from "@tsed/logger";
export interface BaseLogClientOptions {
    callee: string;
}
export declare class CliHttpLogClient {
    callee: string;
    protected logger: Logger;
    constructor(options?: Partial<BaseLogClientOptions>);
    protected onSuccess(options: Record<string, unknown>): Logger;
    protected onError(error: any, options: any): void;
    protected logToCurl(options: any): string;
    protected getStatusCodeFromError(error: any): any;
    protected getHeadersFromError(error: any): any;
    protected getResponseBodyFromError(error: any): any;
    protected formatLog(options: Record<string, any>): {
        callee: string;
        url: any;
        method: any;
        callee_qs: any;
        duration: number | undefined;
    };
    protected errorMapper(error: Error): {
        message: any;
        code: any;
        headers: any;
        body: any;
        x_request_id: any;
    };
}
