import { __decorate } from "tslib";
import { Injectable } from "@tsed/di";
import execa from "execa";
import { filter, mergeWith } from "rxjs/operators";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore
import split from "split";
import { streamToObservable } from "../utils/streamToObservable.js";
let CliExeca = class CliExeca {
    raw = execa;
    /**
     *
     * @param cmd
     * @param args
     * @param opts
     */
    run(cmd, args, opts) {
        const cp = this.raw(cmd, args, opts);
        const stdout = streamToObservable(cp.stdout.pipe(split()), { await: cp });
        const stderr = streamToObservable(cp.stderr.pipe(split()), { await: cp });
        return stdout.pipe(mergeWith(stderr)).pipe(filter(Boolean));
    }
    runSync(cmd, args, opts) {
        return this.raw.sync(cmd, args, opts);
    }
    async getAsync(cmd, args, opts) {
        return (await this.raw(cmd, args, opts)).stdout;
    }
    get(cmd, args, opts) {
        return this.raw.sync(cmd, args, opts).stdout;
    }
};
CliExeca = __decorate([
    Injectable()
], CliExeca);
export { CliExeca };
//# sourceMappingURL=CliExeca.js.map