{"version":3,"file":"logToCurl.js","sourceRoot":"","sources":["../../../src/utils/logToCurl.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,WAAW,CAAC;AAE9B,MAAM,UAAU,SAAS,CAAC,EAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,GAAG,EAAE,EAAM;IAC7E,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACjC,IAAI,MAAM,EAAE;QACV,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;KACpD;IAED,IAAI,IAAI,GAAG,WAAW,MAAM,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;IAErE,IAAI,IAAI,EAAE;QACR,IAAI,IAAI,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;KACzC;IAED,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,WAAW,QAAQ,GAAG,KAAK,KAAK,GAAG,EAAE,EAAE,CAAC,CAAC;IAElH,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import parse from \"url-parse\";\n\nexport function logToCurl({url, method, params, query, data, headers = {}}: any) {\n  const request = parse(url, true);\n  if (params) {\n    request.set(\"query\", Object.assign(params, query));\n  }\n\n  let curl = `curl -X ${method.toUpperCase()} '${request.toString()}'`;\n\n  if (data) {\n    curl += ` -d '${JSON.stringify(data)}'`;\n  }\n\n  curl += Object.entries(headers).reduce((curlHeaders, [key, value]) => `${curlHeaders} -H '${key}: ${value}'`, \"\");\n\n  return curl;\n}\n"]}