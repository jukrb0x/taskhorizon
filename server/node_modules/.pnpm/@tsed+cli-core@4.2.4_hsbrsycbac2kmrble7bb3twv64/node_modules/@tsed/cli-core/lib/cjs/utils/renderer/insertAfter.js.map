{"version":3,"file":"insertAfter.js","sourceRoot":"","sources":["../../../../src/utils/renderer/insertAfter.ts"],"names":[],"mappings":";;;AAAA,SAAgB,WAAW,CAAC,WAAmB,EAAE,OAAe,EAAE,OAAe;IAC/E,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAEtC,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;QACrC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7D,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC;IAEtD,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACvF,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC;KACrB;IAED,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAC;AAfD,kCAeC","sourcesContent":["export function insertAfter(fileContent: string, content: string, pattern: RegExp) {\n  const lines = fileContent.split(\"\\n\");\n\n  const index = lines.findIndex((line) => {\n    return line.match(pattern);\n  });\n\n  const indent = lines[index].replace(lines[index].trim(), \"\");\n  lines[index] = lines[index] + \"\\n\" + indent + content;\n\n  if (![\"]\", \"}\"].includes(lines[index + 1].trim()) && lines[index - 1].slice(-1) === \",\") {\n    lines[index] += \",\";\n  }\n\n  return lines.join(\"\\n\");\n}\n"]}