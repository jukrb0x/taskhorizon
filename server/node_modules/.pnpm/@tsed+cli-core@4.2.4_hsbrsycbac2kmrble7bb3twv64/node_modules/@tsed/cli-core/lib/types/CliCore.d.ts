import { InjectorService } from "@tsed/di";
import { Type } from "@tsed/core";
import { CliService } from "./services/CliService";
export declare class CliCore {
    readonly injector: InjectorService;
    readonly cliService: CliService;
    static checkNodeVersion(wanted: string, id: string): typeof CliCore;
    static create<Cli extends CliCore = CliCore>(settings: Partial<TsED.Configuration>, module?: Type): Promise<Cli>;
    static bootstrap(settings: Partial<TsED.Configuration>, module?: Type): Promise<CliCore>;
    static loadInjector(injector: InjectorService, module?: Type): Promise<void>;
    static updateNotifier(pkg: any): typeof CliCore;
    protected static createInjector(settings: Partial<TsED.Configuration>): InjectorService;
    protected static getProjectRoot(argv: string[]): string;
    bootstrap(): Promise<this>;
}
