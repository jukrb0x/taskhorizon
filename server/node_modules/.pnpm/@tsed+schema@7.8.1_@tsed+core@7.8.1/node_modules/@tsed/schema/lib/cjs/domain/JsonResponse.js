"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonResponse = exports.JsonMedia = void 0;
const mapHeaders_1 = require("../utils/mapHeaders");
const toJsonMapCollection_1 = require("../utils/toJsonMapCollection");
const JsonMap_1 = require("./JsonMap");
class JsonMedia extends JsonMap_1.JsonMap {
    groups = [];
    allowedGroups;
    schema(schema) {
        this.set("schema", schema);
        return this;
    }
    examples(examples) {
        this.set("examples", examples);
        return this;
    }
    toJSON(options = {}) {
        let groups = [...(this.groups || [])];
        return super.toJSON({ ...options, groups });
    }
}
exports.JsonMedia = JsonMedia;
class JsonResponse extends JsonMap_1.JsonMap {
    status;
    constructor(obj = {}) {
        super(obj);
        this.content(obj.content || {});
    }
    description(description) {
        this.set("description", description);
        return this;
    }
    headers(headers) {
        this.set("headers", (0, mapHeaders_1.mapHeaders)(headers));
        return this;
    }
    content(content) {
        this.set("content", (0, toJsonMapCollection_1.toJsonMapCollection)(content, JsonMedia));
        return this;
    }
    getContent() {
        return this.get("content");
    }
    getMedia(mediaType, create = true) {
        create && this.addMedia(mediaType);
        return this.getContent()?.get(mediaType);
    }
    addMedia(mediaType) {
        const content = this.get("content");
        if (!content.has(mediaType)) {
            content.set(mediaType, new JsonMedia());
        }
        return this;
    }
    toJSON(options = {}) {
        const response = super.toJSON(options);
        if (this.status === 204) {
            delete response.content;
        }
        if (response.headers) {
            Object.entries(response.headers).forEach(([key, { type, ...props }]) => {
                response.headers[key] = {
                    ...props,
                    schema: {
                        type
                    }
                };
            });
        }
        return response;
    }
}
exports.JsonResponse = JsonResponse;
//# sourceMappingURL=JsonResponse.js.map