{"version":3,"file":"JsonOperationRoute.js","sourceRoot":"","sources":["../../../src/domain/JsonOperationRoute.ts"],"names":[],"mappings":"AAGA,OAAO,EAAC,UAAU,EAAC,MAAM,qBAAqB,CAAC;AAE/C,MAAM,OAAO,kBAAkB;IACpB,KAAK,CAAY;IACjB,QAAQ,CAAS;IACjB,aAAa,CAAkB;IAC/B,QAAQ,CAAU;IAClB,WAAW,CAA0B;IAE9C,YAAY,OAAoC;QAC9C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAE7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;IACnD,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC;IAClC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAW,CAAC,CAAC;IACrD,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,aAAa,EAAE,MAAM,IAAI,KAAK,CAAC;IAC7C,CAAC;IAED,IAAI,IAAI;QACN,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,IAAI,CAAC,eAAe,IAAI,CAAC;IACjE,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;IAClC,CAAC;IAED,IAAI,eAAe;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;IAClC,CAAC;IAED,IAAI,WAAW;QACb,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;IACpC,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC7B,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,SAA0B,CAAC;IAClD,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;IACxE,CAAC;IAED,GAAG,CAAC,GAAW;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;CACF","sourcesContent":["import {Type} from \"@tsed/core\";\nimport {JsonMethodStore} from \"./JsonMethodStore\";\nimport {JsonMethodPath, JsonOperation} from \"./JsonOperation\";\nimport {concatPath} from \"../utils/concatPath\";\n\nexport class JsonOperationRoute<Entity extends JsonMethodStore = JsonMethodStore> {\n  readonly token: Type<any>;\n  readonly endpoint: Entity;\n  readonly operationPath?: JsonMethodPath;\n  readonly basePath?: string;\n  readonly paramsTypes: Record<string, boolean>;\n\n  constructor(options: Partial<JsonOperationRoute>) {\n    Object.assign(this, options);\n\n    this.paramsTypes = this.endpoint.getParamTypes();\n  }\n\n  get url() {\n    return this.fullPath;\n  }\n\n  get path() {\n    return this.operationPath?.path;\n  }\n\n  get fullPath() {\n    return concatPath(this.basePath, this.path as any);\n  }\n\n  get method() {\n    return this.operationPath?.method || \"USE\";\n  }\n\n  get name() {\n    return `${this.endpoint.targetName}.${this.methodClassName}()`;\n  }\n\n  get className() {\n    return this.endpoint.targetName;\n  }\n\n  get methodClassName() {\n    return this.propertyKey;\n  }\n\n  get parameters() {\n    return this.endpoint.parameters;\n  }\n\n  get propertyKey() {\n    return String(this.endpoint.propertyKey);\n  }\n\n  get propertyName() {\n    return this.endpoint.propertyName;\n  }\n\n  get store() {\n    return this.endpoint.store;\n  }\n\n  get operation(): JsonOperation {\n    return this.endpoint.operation as JsonOperation;\n  }\n\n  get operationId() {\n    return this.operation.get(\"operationId\") || this.endpoint.propertyKey;\n  }\n\n  has(key: string) {\n    return this.paramsTypes[key];\n  }\n}\n"]}