import { SpecTypes } from "../domain/SpecTypes.js";
import { concatParameters } from "./concatParameters.js";
import { getJsonPathParameters } from "./getJsonPathParameters.js";
/**
 * @ignore
 */
export function mergeOperation(obj, operation, { rootPath, specType, operationId, defaultTags, tags, path, method }) {
    const pathParameters = getJsonPathParameters(rootPath, path).map(({ path, parameters }) => {
        path = path ? path : "/";
        // FIXME not on the right place
        if (specType === SpecTypes.OPENAPI) {
            parameters = parameters.map(({ type, ...param }) => {
                return {
                    ...param,
                    schema: {
                        type
                    }
                };
            });
        }
        return { path, parameters };
    });
    return pathParameters.reduce((obj, { path, parameters }) => {
        parameters = concatParameters(parameters, operation);
        path = path ? path : "/";
        const operationTags = operation.tags?.length ? operation.tags : [defaultTags];
        obj.paths[path] = {
            ...obj.paths[path],
            [method.toLowerCase()]: {
                operationId: operation.operationId || operationId(path),
                ...operation,
                tags: operationTags.map(({ name }) => name),
                parameters
            }
        };
        tags.push(...operationTags);
        return obj;
    }, obj);
}
//# sourceMappingURL=mergeOperation.js.map