{"version":3,"file":"allow.js","sourceRoot":"","sources":["../../../../src/decorators/common/allow.ts"],"names":[],"mappings":";;;AAAA,qCAAkE;AAClE,iDAA4C;AAC5C,yCAAoC;AAGpC;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACH,SAAgB,KAAK,CAAC,GAAG,MAAa;IACpC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAA,cAAO,EAAC,IAAI,CAAC,CAAC,CAAC;IACnD,OAAO,IAAA,oBAAa,EAClB,KAAK,IAAI,IAAA,mBAAQ,EAAC,KAAK,CAAC,EACxB,IAAA,2BAAY,EAAC,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;QAC3B,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC;QAE9B,IAAI,KAAK,CAAC,aAAa,KAAK,qBAAc,CAAC,KAAK,EAAE;YAC/C,KAA4B,CAAC,QAAQ,GAAG,IAAI,CAAC;SAC/C;QAED,IAAI,KAAK,CAAC,aAAa,KAAK,qBAAc,CAAC,IAAI,EAAE;YAC/C,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;SACpD;IACH,CAAC,CAAC,CACH,CAAC;AACJ,CAAC;AAhBD,sBAgBC","sourcesContent":["import {DecoratorTypes, isClass, useDecorators} from \"@tsed/core\";\nimport {JsonEntityFn} from \"./jsonEntityFn\";\nimport {Property} from \"./property\";\nimport type {JsonParameterStore} from \"../../domain/JsonParameterStore\";\n\n/**\n * Add allowed values when the property or parameters is required.\n *\n * #### Example on parameter:\n *\n * ```typescript\n * @Post(\"/\")\n * async method(@Allow(\"\") @BodyParams(\"field\") field: string) {}\n * ```\n * > Required will throw a BadRequest when the given value is `null` or `undefined` but not for an empty string.\n *\n * #### Example on model:\n *\n * ```typescript\n * class Model {\n *   @Allow(\"\")\n *   field: string;\n * }\n * ```\n *\n * @returns {Function}\n * @decorator\n * @validation\n * @swagger\n * @schema\n * @input\n */\nexport function Allow(...values: any[]) {\n  const model = values.find((item) => isClass(item));\n  return useDecorators(\n    model && Property(model),\n    JsonEntityFn((store, args) => {\n      store.schema.allow(...values);\n\n      if (store.decoratorType === DecoratorTypes.PARAM) {\n        (store as JsonParameterStore).required = true;\n      }\n\n      if (store.decoratorType === DecoratorTypes.PROP) {\n        store.parentSchema.addRequired(store.propertyName);\n      }\n    })\n  );\n}\n"]}