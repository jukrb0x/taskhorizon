{"version":3,"file":"getJsonEntityStore.js","sourceRoot":"","sources":["../../../src/utils/getJsonEntityStore.ts"],"names":[],"mappings":";;;AAAA,qCAAgD;AAChD,+DAAiF;AACjF,6DAAwD;AACxD,mEAA8D;AAC9D,qEAAgE;AAChE,+DAA0D;AAE1D,uCAAqB,CAAC,GAAG,CAAC,qBAAc,CAAC,KAAK,EAAE,+BAAc,CAAC,CAAC;AAChE,uCAAqB,CAAC,GAAG,CAAC,qBAAc,CAAC,IAAI,EAAE,qCAAiB,CAAC,CAAC;AAClE,uCAAqB,CAAC,GAAG,CAAC,qBAAc,CAAC,KAAK,EAAE,uCAAkB,CAAC,CAAC;AACpE,uCAAqB,CAAC,GAAG,CAAC,qBAAc,CAAC,MAAM,EAAE,iCAAe,CAAC,CAAC;AAsBlE,SAAgB,kBAAkB,CAA8C,GAAG,IAAW;IAC5F,OAAO,iCAAe,CAAC,IAAI,CAAI,GAAG,IAAI,CAAC,CAAC;AAC1C,CAAC;AAFD,gDAEC","sourcesContent":["import {DecoratorTypes, Type} from \"@tsed/core\";\nimport {JsonEntitiesContainer, JsonEntityStore} from \"../domain/JsonEntityStore\";\nimport {JsonClassStore} from \"../domain/JsonClassStore\";\nimport {JsonPropertyStore} from \"../domain/JsonPropertyStore\";\nimport {JsonParameterStore} from \"../domain/JsonParameterStore\";\nimport {JsonMethodStore} from \"../domain/JsonMethodStore\";\n\nJsonEntitiesContainer.set(DecoratorTypes.CLASS, JsonClassStore);\nJsonEntitiesContainer.set(DecoratorTypes.PROP, JsonPropertyStore);\nJsonEntitiesContainer.set(DecoratorTypes.PARAM, JsonParameterStore);\nJsonEntitiesContainer.set(DecoratorTypes.METHOD, JsonMethodStore);\n\n/**\n * Get entity store from decorator args\n * @param target\n */\nexport function getJsonEntityStore<T extends JsonClassStore = JsonClassStore>(target: Type<any>): T;\nexport function getJsonEntityStore<T extends JsonPropertyStore = JsonPropertyStore>(\n  target: Type<any> | any,\n  propertyKey: string | symbol\n): T;\nexport function getJsonEntityStore<T extends JsonParameterStore = JsonParameterStore>(\n  target: Type<any> | any,\n  propertyKey: string | symbol,\n  index: number\n): T;\nexport function getJsonEntityStore<T extends JsonMethodStore = JsonMethodStore>(\n  target: Type<any> | any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n): T;\nexport function getJsonEntityStore<T extends JsonEntityStore = JsonEntityStore>(...args: any[]): T;\nexport function getJsonEntityStore<T extends JsonEntityStore = JsonEntityStore>(...args: any[]): T {\n  return JsonEntityStore.from<T>(...args);\n}\n"]}