{"version":3,"file":"getComputedType.js","sourceRoot":"","sources":["../../../src/utils/getComputedType.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,OAAO,EACP,SAAS,EACT,OAAO,EACP,aAAa,EACb,YAAY,EACZ,MAAM,EACN,2BAA2B,EAC3B,SAAS,EACT,QAAQ,EAET,MAAM,YAAY,CAAC;AAEpB;;GAEG;AACH,MAAM,UAAU,eAAe,CAAC,MAAW;IACzC,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;QACrB,OAAO,MAAM,CAAC;KACf;IAED,IACE,OAAO,CAAC,MAAM,CAAC;QACf,QAAQ,CAAC,MAAM,CAAC;QAChB,2BAA2B,CAAC,MAAM,CAAC;QACnC,aAAa,CAAC,MAAM,CAAC;QACrB,MAAM,CAAC,MAAM,CAAC;QACd,YAAY,CAAC,MAAM,CAAC,EACpB;QACA,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;KACxB;IAED,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;QACrB,OAAQ,MAAc,EAAE,CAAC;KAC1B;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import {\n  classOf,\n  isArrowFn,\n  isClass,\n  isClassObject,\n  isCollection,\n  isDate,\n  isPrimitiveOrPrimitiveClass,\n  isPromise,\n  isSymbol,\n  Type\n} from \"@tsed/core\";\n\n/**\n * @ignore\n */\nexport function getComputedType(target: any): Type<any> {\n  if (isPromise(target)) {\n    return Object;\n  }\n\n  if (\n    isClass(target) ||\n    isSymbol(target) ||\n    isPrimitiveOrPrimitiveClass(target) ||\n    isClassObject(target) ||\n    isDate(target) ||\n    isCollection(target)\n  ) {\n    return classOf(target);\n  }\n\n  if (isArrowFn(target)) {\n    return (target as any)();\n  }\n\n  return target;\n}\n"]}