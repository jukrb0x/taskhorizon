{"version":3,"file":"discriminatorValue.js","sourceRoot":"","sources":["../../../../src/decorators/class/discriminatorValue.ts"],"names":[],"mappings":";;;AAAA,6CAAsC;AACtC,yDAAoD;AAEpD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAwCG;AACH,SAAgB,kBAAkB,CAAC,KAAc,EAAE,GAAG,MAAgB;IACpE,OAAO,IAAA,2BAAY,EAAC,CAAC,KAAK,EAAE,EAAE;QAC5B,KAAK,GAAG,KAAK,IAAI,IAAA,uBAAS,EAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,KAAK,CAAC,qBAAqB,EAAE;YAC/B,KAAK,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC;SACnD;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAPD,gDAOC","sourcesContent":["import {snakeCase} from \"change-case\";\nimport {JsonEntityFn} from \"../common/jsonEntityFn\";\n\n/**\n * Declare a Discriminator value on a child class.\n *\n * ```ts\n * export class Event {\n *   @DiscriminatorKey() // declare this property a discriminator key\n *   type: string;\n *\n *   @Property()\n *   value: string;\n * }\n *\n * @DiscriminatorValue(\"page_view\")\n * export class PageView extends Event {\n *   @Required()\n *   url: string;\n * }\n *\n * @DiscriminatorValue(\"action\")\n * export class Action extends Event {\n *   @Required()\n *   event: string;\n * }\n *\n * @DiscriminatorValue()\n * export class CustomAction extends Event {\n *   @Required()\n *   event: string;\n *\n *   @Property()\n *   meta: string;\n * }\n * ```\n *\n * @decorator\n * @swagger\n * @schema\n * @classDecorator\n * @param value\n * @param values\n */\nexport function DiscriminatorValue(value?: string, ...values: string[]): ClassDecorator {\n  return JsonEntityFn((store) => {\n    value = value || snakeCase(store.targetName);\n    if (store.discriminatorAncestor) {\n      store.schema.discriminatorValue(value, ...values);\n    }\n  });\n}\n"]}