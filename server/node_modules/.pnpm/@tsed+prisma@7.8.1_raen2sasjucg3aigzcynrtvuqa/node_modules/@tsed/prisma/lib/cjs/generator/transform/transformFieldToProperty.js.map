{"version":3,"file":"transformFieldToProperty.js","sourceRoot":"","sources":["../../../../src/generator/transform/transformFieldToProperty.ts"],"names":[],"mappings":";;;AAAA,uCAAqE;AAGrE,6EAAwE;AACxE,mEAA8D;AAE9D,SAAgB,wBAAwB,CAAC,KAAgB,EAAE,GAAqB;IAC9E,OAAO;QACL,IAAI,EAAE,wBAAa,CAAC,QAAQ;QAC5B,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,cAAc,EAAE,IAAI;QACpB,IAAI,EAAE,IAAA,6CAAqB,EAAC,KAAK,CAAC;QAClC,UAAU,EAAE,IAAA,uDAA0B,EAAC,KAAK,EAAE,GAAG,CAAC;KACnD,CAAC;AACJ,CAAC;AARD,4DAQC","sourcesContent":["import {PropertyDeclarationStructure, StructureKind} from \"ts-morph\";\nimport {DmmfField} from \"../domain/DmmfField\";\nimport {TransformContext} from \"../domain/TransformContext\";\nimport {transformFieldToDecorators} from \"./transformFieldToDecorators\";\nimport {transformScalarToType} from \"./transformScalarToType\";\n\nexport function transformFieldToProperty(field: DmmfField, ctx: TransformContext): PropertyDeclarationStructure {\n  return {\n    kind: StructureKind.Property,\n    name: field.name,\n    trailingTrivia: \"\\n\",\n    type: transformScalarToType(field),\n    decorators: transformFieldToDecorators(field, ctx)\n  };\n}\n"]}