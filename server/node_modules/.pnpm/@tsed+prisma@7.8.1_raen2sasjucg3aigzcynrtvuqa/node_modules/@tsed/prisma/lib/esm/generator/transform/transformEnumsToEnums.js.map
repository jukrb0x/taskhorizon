{"version":3,"file":"transformEnumsToEnums.js","sourceRoot":"","sources":["../../../../src/generator/transform/transformEnumsToEnums.ts"],"names":[],"mappings":"AAAA,OAAO,EAAyD,aAAa,EAAC,MAAM,UAAU,CAAC;AAG/F,MAAM,UAAU,qBAAqB,CAAC,SAAmB;IACvD,MAAM,OAAO,GAAwC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;QAClF,OAAO;YACL,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,KAAK;SACb,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO;QACL,IAAI,EAAE,aAAa,CAAC,IAAI;QACxB,IAAI,EAAE,SAAS,CAAC,QAAQ,EAAE;QAC1B,cAAc,EAAE,IAAI;QACpB,aAAa,EAAE,IAAI;QACnB,UAAU,EAAE,IAAI;QAChB,OAAO;KACR,CAAC;AACJ,CAAC","sourcesContent":["import {EnumMemberStructure, OptionalKind, StatementStructures, StructureKind} from \"ts-morph\";\nimport {DmmfEnum} from \"../domain/DmmfEnum\";\n\nexport function transformEnumsToEnums(enumModel: DmmfEnum): StatementStructures {\n  const members: OptionalKind<EnumMemberStructure>[] = enumModel.values.map((value) => {\n    return {\n      name: value,\n      value: value\n    };\n  });\n\n  return {\n    kind: StructureKind.Enum,\n    name: enumModel.toString(),\n    trailingTrivia: \"\\n\",\n    leadingTrivia: \"\\n\",\n    isExported: true,\n    members\n  };\n}\n"]}