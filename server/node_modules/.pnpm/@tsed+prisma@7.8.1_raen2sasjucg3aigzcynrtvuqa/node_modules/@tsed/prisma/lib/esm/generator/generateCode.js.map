{"version":3,"file":"generateCode.js","sourceRoot":"","sources":["../../../src/generator/generateCode.ts"],"names":[],"mappings":"AACA,OAAO,EAAkB,UAAU,EAAE,OAAO,EAAE,YAAY,EAAC,MAAM,UAAU,CAAC;AAC5E,OAAO,EAAC,aAAa,EAAC,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAC,cAAc,EAAC,MAAM,wBAAwB,CAAC;AACtD,OAAO,EAAC,mBAAmB,EAAC,MAAM,6BAA6B,CAAC;AAChE,OAAO,EAAC,kBAAkB,EAAC,MAAM,4BAA4B,CAAC;AAC9D,OAAO,EAAC,aAAa,EAAC,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAC,qBAAqB,EAAC,MAAM,+BAA+B,CAAC;AACpE,OAAO,EAAC,oBAAoB,EAAC,MAAM,8BAA8B,CAAC;AAClE,OAAO,EAAC,WAAW,EAAC,MAAM,qBAAqB,CAAC;AAEhD,MAAM,mBAAmB,GAAoB;IAC3C,MAAM,EAAE,YAAY,CAAC,MAAM;IAC3B,MAAM,EAAE,UAAU,CAAC,QAAQ;IAC3B,qBAAqB,EAAE,IAAI;IAC3B,sBAAsB,EAAE,IAAI;IAC5B,eAAe,EAAE,IAAI;CACtB,CAAC;AAQF,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,IAAmB,EAAE,OAA4B;IAClF,MAAM,WAAW,GAAG,OAAO,CAAC,aAAa,CAAC;IAC1C,MAAM,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAE9G,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC;QAC1B,eAAe,EAAE;YACf,GAAG,mBAAmB;YACtB,GAAG,CAAC,kBAAkB,IAAI,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC;SAC/C;KACF,CAAC,CAAC;IAEH,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IAC1D,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IAC3C,kBAAkB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IACzC,mBAAmB,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;IACnD,qBAAqB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAC5C,oBAAoB,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IACjD,aAAa,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;IAE7C,IAAI,kBAAkB,EAAE;QACtB,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;KACtB;SAAM;QACL,MAAM,WAAW,CAAC,OAAO,CAAC,CAAC;KAC5B;AACH,CAAC","sourcesContent":["import {DMMF} from \"@prisma/generator-helper\";\nimport {CompilerOptions, ModuleKind, Project, ScriptTarget} from \"ts-morph\";\nimport {generateEnums} from \"./utils/generateEnums\";\nimport {generateModels} from \"./utils/generateModels\";\nimport {generateClientIndex} from \"./utils/generateClientIndex\";\nimport {generateInterfaces} from \"./utils/generateInterfaces\";\nimport {generateIndex} from \"./utils/generateIndex\";\nimport {generatePrismaService} from \"./utils/generatePrismaService\";\nimport {generateRepositories} from \"./utils/generateRepositories\";\nimport {saveProject} from \"./utils/saveProject\";\n\nconst baseCompilerOptions: CompilerOptions = {\n  target: ScriptTarget.ES2019,\n  module: ModuleKind.CommonJS,\n  emitDecoratorMetadata: true,\n  experimentalDecorators: true,\n  esModuleInterop: true\n};\n\nexport interface GenerateCodeOptions {\n  emitTranspiledCode: boolean;\n  outputDirPath: string;\n  prismaClientPath: string;\n}\n\nexport async function generateCode(dmmf: DMMF.Document, options: GenerateCodeOptions) {\n  const baseDirPath = options.outputDirPath;\n  const emitTranspiledCode = options.emitTranspiledCode ? true : options.outputDirPath.includes(\"node_modules\");\n\n  const project = new Project({\n    compilerOptions: {\n      ...baseCompilerOptions,\n      ...(emitTranspiledCode && {declaration: true})\n    }\n  });\n\n  const hasEnum = generateEnums(dmmf, project, baseDirPath);\n  generateModels(dmmf, project, baseDirPath);\n  generateInterfaces(project, baseDirPath);\n  generateClientIndex(project, baseDirPath, options);\n  generatePrismaService(project, baseDirPath);\n  generateRepositories(dmmf, project, baseDirPath);\n  generateIndex(project, baseDirPath, hasEnum);\n\n  if (emitTranspiledCode) {\n    await project.emit();\n  } else {\n    await saveProject(project);\n  }\n}\n"]}