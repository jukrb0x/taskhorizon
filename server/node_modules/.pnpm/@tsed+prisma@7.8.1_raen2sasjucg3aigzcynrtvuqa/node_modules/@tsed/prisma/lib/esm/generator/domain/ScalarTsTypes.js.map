{"version":3,"file":"ScalarTsTypes.js","sourceRoot":"","sources":["../../../../src/generator/domain/ScalarTsTypes.ts"],"names":[],"mappings":"AAEA,MAAM,CAAN,IAAY,aAUX;AAVD,WAAY,aAAa;IACvB,kCAAiB,CAAA;IACjB,oCAAmB,CAAA;IACnB,4BAAW,CAAA;IACX,gCAAe,CAAA;IACf,kCAAiB,CAAA;IACjB,oCAAmB,CAAA;IACnB,sCAAqB,CAAA;IACrB,8BAAa,CAAA;IACb,gCAAe,CAAA;AACjB,CAAC,EAVW,aAAa,KAAb,aAAa,QAUxB;AAED,MAAM,CAAC,MAAM,aAAa,GAA2B;IACnD,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,QAAQ;IAChC,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,SAAS;IAClC,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,QAAQ;IAC7B,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,QAAQ;IAC/B,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,QAAQ;IACjC,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,QAAQ;IAChC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,MAAM;IAChC,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK;IAC3B,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,QAAQ;CAChC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAA2B;IACrD,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,QAAQ;IAChC,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,SAAS;IAClC,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,QAAQ;IAC7B,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,QAAQ;IAC/B,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,QAAQ;IACjC,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,QAAQ;IAChC,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,MAAM;IAChC,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,QAAQ;IAC9B,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,QAAQ;CAChC,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAuD;IAClF,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE;IAC1B,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,EAAE;IAC3B,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;QACnB;YACE,IAAI,EAAE,SAAS;YACf,SAAS,EAAE,EAAE;SACd;KACF;IACD,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE;IACzB,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,EAAE;IAC1B,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,EAAE;IAC3B,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,aAAa,CAAC,EAAC,CAAC;IACxE,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE;IACxB,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE;CAC1B,CAAC","sourcesContent":["import {DecoratorStructure, StructureKind} from \"ts-morph\";\n\nexport enum PrismaScalars {\n  String = \"String\",\n  Boolean = \"Boolean\",\n  Int = \"Int\",\n  Float = \"Float\",\n  BigInt = \"BigInt\",\n  Decimal = \"Decimal\",\n  DateTime = \"DateTime\",\n  Json = \"Json\",\n  Bytes = \"Bytes\"\n}\n\nexport const ScalarTsTypes: Record<string, string> = {\n  [PrismaScalars.String]: \"string\",\n  [PrismaScalars.Boolean]: \"boolean\",\n  [PrismaScalars.Int]: \"number\",\n  [PrismaScalars.Float]: \"number\",\n  [PrismaScalars.Decimal]: \"number\",\n  [PrismaScalars.BigInt]: \"bigint\",\n  [PrismaScalars.DateTime]: \"Date\",\n  [PrismaScalars.Json]: \"any\",\n  [PrismaScalars.Bytes]: \"Buffer\"\n};\n\nexport const ScalarJsClasses: Record<string, string> = {\n  [PrismaScalars.String]: \"String\",\n  [PrismaScalars.Boolean]: \"Boolean\",\n  [PrismaScalars.Int]: \"Number\",\n  [PrismaScalars.Float]: \"Number\",\n  [PrismaScalars.Decimal]: \"Number\",\n  [PrismaScalars.BigInt]: \"BigInt\",\n  [PrismaScalars.DateTime]: \"Date\",\n  [PrismaScalars.Json]: \"Object\",\n  [PrismaScalars.Bytes]: \"Buffer\"\n};\n\nexport const ScalarDecorators: Record<string, Omit<DecoratorStructure, \"kind\">[]> = {\n  [PrismaScalars.String]: [],\n  [PrismaScalars.Boolean]: [],\n  [PrismaScalars.Int]: [\n    {\n      name: \"Integer\",\n      arguments: []\n    }\n  ],\n  [PrismaScalars.Float]: [],\n  [PrismaScalars.BigInt]: [],\n  [PrismaScalars.Decimal]: [],\n  [PrismaScalars.DateTime]: [{name: \"Format\", arguments: ['\"date-time\"']}],\n  [PrismaScalars.Json]: [],\n  [PrismaScalars.Bytes]: []\n};\n"]}