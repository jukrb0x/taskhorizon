{"version":3,"file":"generateEnums.js","sourceRoot":"","sources":["../../../../src/generator/utils/generateEnums.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,KAAK,EAAC,MAAM,YAAY,CAAC;AACjC,OAAO,EAAC,QAAQ,EAAC,MAAM,oBAAoB,CAAC;AAC5C,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAC,iBAAiB,EAAC,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAC,qBAAqB,EAAC,MAAM,oCAAoC,CAAC;AACzE,OAAO,EAAC,yBAAyB,EAAC,MAAM,6BAA6B,CAAC;AAEtE,MAAM,UAAU,aAAa,CAAC,IAAmB,EAAE,OAAgB,EAAE,WAAmB;IACtF,MAAM,QAAQ,GAAG,KAAK,CAA6B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACjF,MAAM,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAChD,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IACxD,MAAM,cAAc,GAAG,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;IAC7D,MAAM,UAAU,GAAG,cAAc,CAAC,gBAAgB,CAAC,UAAU,EAAE,SAAS,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;IAE7F,MAAM,aAAa,GAAG,iBAAiB,CAAW,KAAK,EAAE,cAAc,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC,CAAC;IAExH,IAAI,KAAK,CAAC,MAAM,EAAE;QAChB,OAAO,CAAC,CAAC,yBAAyB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;KAC/D;IAED,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import {DMMF} from \"@prisma/generator-helper\";\nimport {Project} from \"ts-morph\";\nimport {toMap} from \"@tsed/core\";\nimport {DmmfEnum} from \"../domain/DmmfEnum\";\nimport path from \"path\";\nimport {generateDocuments} from \"./generateDocuments\";\nimport {transformEnumsToEnums} from \"../transform/transformEnumsToEnums\";\nimport {generateOutputsBarrelFile} from \"./generateOutputsBarrelFile\";\n\nexport function generateEnums(dmmf: DMMF.Document, project: Project, baseDirPath: string): boolean {\n  const enumsMap = toMap<string, DMMF.DatamodelEnum>(dmmf.datamodel.enums, \"name\");\n  const enums = DmmfEnum.getEnums(dmmf, enumsMap);\n  const enumsDirPath = path.resolve(baseDirPath, \"enums\");\n  const enumsDirectory = project.createDirectory(enumsDirPath);\n  const enumsIndex = enumsDirectory.createSourceFile(`index.ts`, undefined, {overwrite: true});\n\n  const exportedEnums = generateDocuments<DmmfEnum>(enums, enumsDirectory, (document) => transformEnumsToEnums(document));\n\n  if (enums.length) {\n    return !!generateOutputsBarrelFile(enumsIndex, exportedEnums);\n  }\n\n  return false;\n}\n"]}