"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseDocumentationAttributes = exports.argsRegex = exports.attributeArgsRegex = exports.attributeNameRegex = exports.attributeRegex = void 0;
exports.attributeRegex = /(@TsED\.)+([A-z])+(\()(.*)(\))+/;
exports.attributeNameRegex = /(?:\.)+([A-Za-z])+(?:\()+/;
exports.attributeArgsRegex = /(?:\()+([A-Za-z])+\:+(.+)+(?:\))+/;
exports.argsRegex = /(?:\()+((.+))+(?:\))+/;
function parseDocumentationAttributes(documentation) {
    if (!documentation) {
        return [];
    }
    return documentation
        .split("\n")
        .map((current) => {
        const attribute = current.match(exports.attributeRegex)?.[0];
        if (!attribute) {
            return;
        }
        const attributeName = current.match(exports.attributeNameRegex)?.[0]?.slice(1, -1);
        const rawAttributeArgs = attribute.match(exports.attributeArgsRegex)?.[0]?.slice(1, -1);
        const args = [];
        if (rawAttributeArgs) {
            const splitRawArgsArray = rawAttributeArgs.split(",").map((it) => it.trim());
            const parsedAttributeArgs = splitRawArgsArray &&
                Object.fromEntries(splitRawArgsArray.map((it) => {
                    const [key, value] = it.split(": ");
                    return [key, JSON.parse(value)];
                }));
            args.push(parsedAttributeArgs);
        }
        else {
            const inputs = attribute
                .match(exports.argsRegex)?.[0]
                ?.slice(1, -1)
                ?.split(",")
                .map((it) => it.trim());
            args.push(...(inputs || []));
        }
        return {
            name: attributeName,
            content: attribute,
            arguments: args
        };
    })
        .map((options) => {
        if (options?.name === "Ignore") {
            const args = options.arguments.join(" && ");
            return {
                ...options,
                arguments: args.length > 0 ? [`(value: any, ctx: any) => ${args}`] : []
            };
        }
        return options;
    })
        .filter(Boolean);
}
exports.parseDocumentationAttributes = parseDocumentationAttributes;
//# sourceMappingURL=parseDocumentationAttributes.js.map