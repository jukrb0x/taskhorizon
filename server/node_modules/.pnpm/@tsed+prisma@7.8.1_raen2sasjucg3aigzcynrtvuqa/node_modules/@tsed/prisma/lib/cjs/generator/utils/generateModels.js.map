{"version":3,"file":"generateModels.js","sourceRoot":"","sources":["../../../../src/generator/utils/generateModels.ts"],"names":[],"mappings":";;;;AACA,qCAA2C;AAC3C,wDAAwB;AAExB,mDAA8C;AAC9C,8EAAyE;AACzE,2DAAsD;AACtD,2EAAsE;AAEtE,SAAgB,cAAc,CAAC,IAAmB,EAAE,OAAgB,EAAE,WAAmB;IACvF,MAAM,SAAS,GAAG,IAAA,YAAK,EAAqB,IAAA,eAAQ,EAAC,IAAI,EAAE,kBAAkB,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IAC5F,MAAM,QAAQ,GAAG,IAAA,YAAK,EAAqB,IAAA,eAAQ,EAAC,IAAI,EAAE,iBAAiB,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IAE1F,MAAM,MAAM,GAAG,qBAAS,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC9D,MAAM,aAAa,GAAG,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC1D,MAAM,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;IAC/D,MAAM,WAAW,GAAG,eAAe,CAAC,gBAAgB,CAAC,UAAU,EAAE,SAAS,EAAE,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;IAE/F,MAAM,cAAc,GAAG,IAAA,qCAAiB,EAAY,MAAM,EAAE,eAAe,EAAE,CAAC,KAAK,EAAE,UAAU,EAAE,EAAE;QACjG,OAAO,IAAA,6CAAqB,EAAC,KAAK,EAAE;YAClC,IAAI;YACJ,SAAS;SACV,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAA,qDAAyB,EAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AACzD,CAAC;AAjBD,wCAiBC","sourcesContent":["import {DMMF} from \"@prisma/generator-helper\";\nimport {getValue, toMap} from \"@tsed/core\";\nimport path from \"path\";\nimport {Project} from \"ts-morph\";\nimport {DmmfModel} from \"../domain/DmmfModel\";\nimport {transformModelToClass} from \"../transform/transformModelToClass\";\nimport {generateDocuments} from \"./generateDocuments\";\nimport {generateOutputsBarrelFile} from \"./generateOutputsBarrelFile\";\n\nexport function generateModels(dmmf: DMMF.Document, project: Project, baseDirPath: string) {\n  const modelsMap = toMap<string, DMMF.Model>(getValue(dmmf, \"datamodel.models\", []), \"name\");\n  const typesMap = toMap<string, DMMF.Model>(getValue(dmmf, \"datamodel.types\", []), \"name\");\n\n  const models = DmmfModel.getModels(dmmf, modelsMap, typesMap);\n  const modelsDirPath = path.resolve(baseDirPath, \"models\");\n  const modelsDirectory = project.createDirectory(modelsDirPath);\n  const modelsIndex = modelsDirectory.createSourceFile(`index.ts`, undefined, {overwrite: true});\n\n  const exportedModels = generateDocuments<DmmfModel>(models, modelsDirectory, (model, sourceFile) => {\n    return transformModelToClass(model, {\n      dmmf,\n      modelsMap\n    });\n  });\n\n  generateOutputsBarrelFile(modelsIndex, exportedModels);\n}\n"]}