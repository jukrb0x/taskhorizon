"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformScalarToType = void 0;
const DmmfModel_1 = require("../domain/DmmfModel");
const ScalarTsTypes_1 = require("../domain/ScalarTsTypes");
const DmmfEnum_1 = require("../domain/DmmfEnum");
function transformScalarToType(field) {
    const { isRequired, isNullable, type, isList, location, model } = field;
    let TSType = type;
    switch (location) {
        case "scalar":
            TSType = ScalarTsTypes_1.ScalarTsTypes[field.type];
            break;
        case "enumTypes":
            TSType = DmmfEnum_1.DmmfEnum.symbolName(type);
            field.model.addImportDeclaration(`../enums`, DmmfEnum_1.DmmfEnum.symbolName(field.type));
            break;
        case "inputObjectTypes":
            TSType = DmmfModel_1.DmmfModel.symbolName(type);
            if (field.model.name !== field.type) {
                field.model.addImportDeclaration(`./${DmmfModel_1.DmmfModel.symbolName(field.type)}`, DmmfModel_1.DmmfModel.symbolName(field.type));
            }
            break;
    }
    if (isList) {
        TSType += "[]";
    }
    if (!isRequired) {
        if (model.isInputType) {
            TSType += " | undefined";
        }
        else {
            TSType += " | null";
        }
    }
    else if (isNullable && !isList) {
        TSType += " | null";
    }
    return TSType;
}
exports.transformScalarToType = transformScalarToType;
//# sourceMappingURL=transformScalarToType.js.map