{"version":3,"file":"transformFieldToProperty.js","sourceRoot":"","sources":["../../../../src/generator/transform/transformFieldToProperty.ts"],"names":[],"mappings":"AAAA,OAAO,EAA+B,aAAa,EAAC,MAAM,UAAU,CAAC;AAGrE,OAAO,EAAC,0BAA0B,EAAC,MAAM,8BAA8B,CAAC;AACxE,OAAO,EAAC,qBAAqB,EAAC,MAAM,yBAAyB,CAAC;AAE9D,MAAM,UAAU,wBAAwB,CAAC,KAAgB,EAAE,GAAqB;IAC9E,OAAO;QACL,IAAI,EAAE,aAAa,CAAC,QAAQ;QAC5B,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,cAAc,EAAE,IAAI;QACpB,IAAI,EAAE,qBAAqB,CAAC,KAAK,CAAC;QAClC,UAAU,EAAE,0BAA0B,CAAC,KAAK,EAAE,GAAG,CAAC;KACnD,CAAC;AACJ,CAAC","sourcesContent":["import {PropertyDeclarationStructure, StructureKind} from \"ts-morph\";\nimport {DmmfField} from \"../domain/DmmfField\";\nimport {TransformContext} from \"../domain/TransformContext\";\nimport {transformFieldToDecorators} from \"./transformFieldToDecorators\";\nimport {transformScalarToType} from \"./transformScalarToType\";\n\nexport function transformFieldToProperty(field: DmmfField, ctx: TransformContext): PropertyDeclarationStructure {\n  return {\n    kind: StructureKind.Property,\n    name: field.name,\n    trailingTrivia: \"\\n\",\n    type: transformScalarToType(field),\n    decorators: transformFieldToDecorators(field, ctx)\n  };\n}\n"]}