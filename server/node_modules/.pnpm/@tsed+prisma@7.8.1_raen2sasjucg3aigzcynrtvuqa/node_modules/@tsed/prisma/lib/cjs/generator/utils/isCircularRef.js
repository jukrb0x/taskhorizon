"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isCircularRef = void 0;
function isCircularRef(modelName, fieldType, ctx) {
    if (modelName === fieldType) {
        return true;
    }
    const relation1 = ctx.modelsMap.get(modelName);
    const relation2 = ctx.modelsMap.get(fieldType);
    return Boolean(relation1 && relation2 && hasModelInFields(relation1, fieldType, ctx) && hasModelInFields(relation2, modelName, ctx));
}
exports.isCircularRef = isCircularRef;
function hasModelInFields(model, relation, ctx, inspected = []) {
    return !!model.fields.find((field) => {
        if (field.type === relation) {
            return true;
        }
        if (!inspected.includes(field.type)) {
            const nextModel = ctx.modelsMap.get(field.type);
            if (nextModel) {
                return hasModelInFields(nextModel, relation, ctx, [...inspected, field.type]);
            }
        }
        return false;
    });
}
//# sourceMappingURL=isCircularRef.js.map