{"version":3,"file":"removeDir.js","sourceRoot":"","sources":["../../../../src/generator/utils/removeDir.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAC,QAAQ,IAAI,EAAE,EAAC,MAAM,IAAI,CAAC;AAElC,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,SAAS,CAAC,OAAe,EAAE,WAAoB;IAC3E,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC,CAAC;IACpE,MAAM,OAAO,CAAC,GAAG,CACf,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;QAChC,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnD,OAAO,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,MAAM,SAAS,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC/F,CAAC,CAAC,CACH,CAAC;IACF,IAAI,CAAC,WAAW,EAAE;QAChB,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KACzB;AACH,CAAC","sourcesContent":["import path from \"path\";\nimport {promises as fs} from \"fs\";\n\nexport default async function removeDir(dirPath: string, onlyContent: boolean) {\n  const dirEntries = await fs.readdir(dirPath, {withFileTypes: true});\n  await Promise.all(\n    dirEntries.map(async (dirEntry) => {\n      const fullPath = path.join(dirPath, dirEntry.name);\n      return dirEntry.isDirectory() ? await removeDir(fullPath, false) : await fs.unlink(fullPath);\n    })\n  );\n  if (!onlyContent) {\n    await fs.rmdir(dirPath);\n  }\n}\n"]}