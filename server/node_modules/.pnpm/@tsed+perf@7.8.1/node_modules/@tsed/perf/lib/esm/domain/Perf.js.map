{"version":3,"file":"Perf.js","sourceRoot":"","sources":["../../../src/domain/Perf.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAC,MAAM,YAAY,CAAC;AACrC,OAAO,EAAC,OAAO,EAAE,GAAG,EAAC,MAAM,gBAAgB,CAAC;AAI5C,uBAAuB;AACvB,MAAM,OAAO,IAAI;IACf,OAAO,CAAS;IAChB,MAAM,CAAS;IAEf;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,KAAK;QACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC;QAEnC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,MAAM,CAAU,EAAU,EAAE,EAAsB;QACtD,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC3B,MAAM,EAAE,EAAE,CAAC;aACZ;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;IAID,GAAG,CAAU,EAAsB,EAAE,MAA+B;QAClE,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC;QAEnB,MAAM,MAAM,GAAG,EAAE,EAAE,CAAC;QAEpB,MAAM,OAAO,GAAG,CAAC,MAAW,EAAE,EAAE;YAC9B,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC;YAErB,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;YAEvB,OAAO,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;QAChD,CAAC,CAAC;QAEF,IAAI,SAAS,CAAC,MAAM,CAAC,EAAE;YACrB,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7B;QAED,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,SAAS;QACP,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,UAAU;QACR,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC;QACrB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,GAAG;QACD,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC;QACnC,OAAO,IAAI,CAAC;IACd,CAAC;CACF","sourcesContent":["import {isPromise} from \"@tsed/core\";\nimport {fromNow, now} from \"../utils/utils\";\n\nexport type CallbackWrapper<T = any> = (...args: any[]) => T;\n\n// istanbul ignore next\nexport class Perf {\n  #latest: bigint;\n  #start: bigint;\n\n  constructor() {\n    this.start = this.start.bind(this);\n    this.end = this.end.bind(this);\n    this.run = this.run.bind(this);\n    this.fromStart = this.fromStart.bind(this);\n    this.fromLatest = this.fromLatest.bind(this);\n  }\n\n  start() {\n    this.#start = this.#latest = now();\n\n    return this;\n  }\n\n  async runFor<T = any>(it: number, fn: CallbackWrapper<T>) {\n    const {time} = await this.run(async () => {\n      for (let i = 0; i < it; i++) {\n        await fn();\n      }\n    });\n\n    return time;\n  }\n\n  run<T = any>(fn: CallbackWrapper<T>): {result: T; time: number} | Promise<{result: T; time: number}>;\n  run<T = any>(fn: CallbackWrapper<T>, onTime: (time: number) => void): T;\n  run<T = any>(fn: CallbackWrapper<T>, onTime?: (time: number) => void) {\n    const date = now();\n\n    const result = fn();\n\n    const getDiff = (result: any) => {\n      const diff = fromNow(date);\n      this.#latest = now();\n\n      onTime && onTime(diff);\n\n      return onTime ? result : {result, time: diff};\n    };\n\n    if (isPromise(result)) {\n      return result.then(getDiff);\n    }\n\n    return getDiff(result);\n  }\n\n  fromStart() {\n    return fromNow(this.#start);\n  }\n\n  fromLatest() {\n    const diff = fromNow(this.#latest);\n    this.#latest = now();\n    return diff;\n  }\n\n  end() {\n    const diff = fromNow(this.#start);\n    this.#start = this.#latest = now();\n    return diff;\n  }\n}\n"]}