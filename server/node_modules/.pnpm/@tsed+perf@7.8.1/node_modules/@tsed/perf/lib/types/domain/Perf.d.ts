export declare type CallbackWrapper<T = any> = (...args: any[]) => T;
export declare class Perf {
    #private;
    constructor();
    start(): this;
    runFor<T = any>(it: number, fn: CallbackWrapper<T>): Promise<number>;
    run<T = any>(fn: CallbackWrapper<T>): {
        result: T;
        time: number;
    } | Promise<{
        result: T;
        time: number;
    }>;
    run<T = any>(fn: CallbackWrapper<T>, onTime: (time: number) => void): T;
    fromStart(): number;
    fromLatest(): number;
    end(): number;
}
