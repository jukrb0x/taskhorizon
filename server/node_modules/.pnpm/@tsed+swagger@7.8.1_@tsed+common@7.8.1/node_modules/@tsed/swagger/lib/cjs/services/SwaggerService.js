"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwaggerService = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@tsed/common");
const schema_1 = require("@tsed/schema");
const includeRoute_1 = require("../utils/includeRoute");
let SwaggerService = class SwaggerService {
    injectorService;
    platform;
    configuration;
    #specs = new Map();
    constructor(injectorService, platform, configuration) {
        this.injectorService = injectorService;
        this.platform = platform;
        this.configuration = configuration;
    }
    async getOpenAPISpec(conf) {
        if (!this.#specs.has(conf.path)) {
            const { version = "1.0.0", acceptMimes } = this.configuration;
            const specPath = conf.specPath ? this.configuration.resolve(conf.specPath) : conf.specPath;
            const tokens = this.platform
                .getMountedControllers()
                .filter(({ route, provider }) => (0, includeRoute_1.includeRoute)(route, provider, conf))
                .map(({ route, provider }) => ({ token: provider.token, rootPath: route }));
            const spec = await (0, schema_1.generateSpec)({
                tokens,
                ...conf,
                specPath,
                version,
                acceptMimes
            });
            this.#specs.set(conf.path, spec);
        }
        return this.#specs.get(conf.path);
    }
};
SwaggerService = tslib_1.__decorate([
    (0, common_1.Injectable)(),
    tslib_1.__param(2, (0, common_1.Configuration)()),
    tslib_1.__metadata("design:paramtypes", [common_1.InjectorService,
        common_1.Platform, Object])
], SwaggerService);
exports.SwaggerService = SwaggerService;
//# sourceMappingURL=SwaggerService.js.map