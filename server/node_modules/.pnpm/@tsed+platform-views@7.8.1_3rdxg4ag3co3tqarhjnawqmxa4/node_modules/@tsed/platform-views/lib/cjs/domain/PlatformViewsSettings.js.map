{"version":3,"file":"PlatformViewsSettings.js","sourceRoot":"","sources":["../../../src/domain/PlatformViewsSettings.ts"],"names":[],"mappings":";;;AAEa,QAAA,yBAAyB,GAAG;IACvC,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,MAAM;IACZ,GAAG,EAAE,KAAK;IACV,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,MAAM;IACZ,aAAa,EAAE,aAAa;IAC5B,MAAM,EAAE,QAAQ;IAChB,GAAG,EAAE,YAAY;IACjB,UAAU,EAAE,YAAY;IACxB,KAAK,EAAE,OAAO;IACd,OAAO,EAAE,SAAS;IAClB,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,UAAU;IACpB,QAAQ,EAAE,UAAU;IACpB,MAAM,EAAE,QAAQ;IAChB,GAAG,EAAE,KAAK;IACV,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,KAAK,EAAE,OAAO;IACd,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE,KAAK;IACV,SAAS,EAAE,WAAW;IACtB,IAAI,EAAE,MAAM;IACZ,MAAM,EAAE,QAAQ;IAChB,SAAS,EAAE,WAAW;IACtB,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;IACZ,UAAU,EAAE,YAAY;IACxB,IAAI,EAAE,MAAM;IACZ,UAAU,EAAE,YAAY;IACxB,MAAM,EAAE,QAAQ;IAChB,QAAQ,EAAE,UAAU;CACrB,CAAC","sourcesContent":["import {BaseContext} from \"@tsed/di\";\n\nexport const PLATFORM_VIEWS_EXTENSIONS = {\n  atpl: \"atpl\",\n  bracket: \"bracket\",\n  dot: \"dot\",\n  dust: \"dust\",\n  ect: \"ect\",\n  ejs: \"ejs\",\n  haml: \"haml\",\n  \"haml-coffee\": \"haml-coffee\",\n  hamlet: \"hamlet\",\n  hbs: \"handlebars\",\n  handlebars: \"handlebars\",\n  hogan: \"hogan\",\n  htmling: \"htmling\",\n  jazz: \"jazz\",\n  jqtpl: \"jqtpl\",\n  just: \"just\",\n  kernel: \"kernel\",\n  liquid: \"liquid\",\n  liquor: \"liquor\",\n  lodash: \"lodash\",\n  mote: \"mote\",\n  mustache: \"mustache\",\n  nunjucks: \"nunjucks\",\n  plates: \"plates\",\n  pug: \"pug\",\n  qejs: \"qejs\",\n  ractive: \"ractive\",\n  razor: \"razor\",\n  jsx: \"react\",\n  slm: \"slm\",\n  squirelly: \"squirelly\",\n  swig: \"swig\",\n  teacup: \"teacup\",\n  templayed: \"templayed\",\n  toffee: \"toffee\",\n  twig: \"twig\",\n  underscore: \"underscore\",\n  vash: \"vash\",\n  velocityjs: \"velocityjs\",\n  walrus: \"walrus\",\n  whiskers: \"whiskers\"\n};\n\nexport type PlatformViewsExtensionsTypes = Record<string, string>;\n\nexport interface PlatformViewsEngineOptions extends Record<string, unknown> {\n  requires?: any;\n}\n\nexport interface PlatformRenderOptions extends Record<string, unknown> {\n  $ctx: BaseContext;\n}\n\nexport interface PlatformViewEngine {\n  options: PlatformViewsEngineOptions;\n\n  render(path: string, options: PlatformRenderOptions): Promise<string>;\n}\n\nexport interface PlatformViewsSettings {\n  disabled?: boolean;\n  /**\n   * Views directory.\n   */\n  root?: string;\n  /**\n   * Enable cache. Ts.ED enable cache in PRODUCTION profile by default.\n   */\n  cache?: boolean;\n  /**\n   * Provide extensions mapping to match the expected engines.\n   */\n  extensions?: Partial<PlatformViewsExtensionsTypes>;\n  /**\n   * Default view engine extension.\n   * Allow omitting extension when using View decorator or render method.\n   */\n  viewEngine?: string;\n  /**\n   * Options mapping for each engine.\n   */\n  options?: Record<string, PlatformViewsEngineOptions>;\n}\n\ndeclare global {\n  namespace TsED {\n    interface Configuration {\n      /**\n       * Object to configure Views engines with Consolidate. See more on [View engine](/docs/template-engine.md).\n       */\n      views: PlatformViewsSettings;\n    }\n  }\n}\n"]}